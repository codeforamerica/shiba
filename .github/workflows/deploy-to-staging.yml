# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Run tests and deploy to staging

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs: { }

jobs:
  test:
    name: Run test suite
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: shiba
          POSTGRES_PASSWORD: shiba
          POSTGRES_DB: shiba-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v2
    - name: Set up ChromeDriver
      uses: nanasess/setup-chromedriver@v1.0.1
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '14'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test with Gradle
      run: S3_BUCKET=${{ secrets.S3_TEST_BUCKET }} \
        env 'CLOUD_AWS_CREDENTIALS_ACCESS-KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}' \
        env 'CLOUD_AWS_CREDENTIALS_SECRET-KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}' \
        ./gradlew clean testAll
    - name: Announce test failure on slack
      if: ${{ failure() }}
      uses: innocarpe/actions-slack@v1
      with:
        status: ${{ job.status }}
        failure_text: 'Tests failed in CI! :disappointed:'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  deploy:
    name: Deploy to Aptible staging
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          ref: main
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.0.3
        with:
          key: ${{ secrets.APTIBLE_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.APTIBLE_KNOWN_HOSTS }}
      - name: Generate Sentry release name from sha
        id: generate-release
        run: echo "::set-output name=RELEASE::$(git rev-parse HEAD)"
      - name: Wait for last deploy to complete
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_KEY }}
      - name: Push to Aptible remote branch
        run: git push --force git@beta.aptible.com:mn-shiba-staging/shiba-staging.git "main:staging-deploy"
      - name: Install Aptible CLI and deploy to Aptible
        run: |
          wget -O aptible-package https://omnibus-aptible-toolbelt.s3.amazonaws.com/aptible/omnibus-aptible-toolbelt/master/206/pkg/aptible-toolbelt_0.16.5%2B20200508143656~ubuntu.16.04-1_amd64.deb
          sudo dpkg -i aptible-package
          aptible login --email=${{ secrets.APTIBLE_USERNAME }} --password=${{ secrets.APTIBLE_PASSWORD}}
          aptible deploy --app shiba-staging --git-commitish staging-deploy SPRING_PROFILES_ACTIVE=staging \
          'MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}' \
          'SMARTY_STREET_AUTH_ID=${{ secrets.SMARTY_STREET_AUTH_ID }}' \
          'SMARTY_STREET_AUTH_TOKEN=${{ secrets.SMARTY_STREET_AUTH_TOKEN }}' \
          'CLIENT_KEYSTORE-PASSWORD=${{ secrets.CLIENT_KEYSTORE_PASSWORD }}' \
          'MNIT-ESB_USERNAME=${{ secrets.MNIT_USERNAME }}' \
          'MNIT-ESB_PASSWORD=${{ secrets.MNIT_PASSWORD }}' \
          'SHIBA_USERNAME=${{ secrets.SHIBA_USERNAME }}' \
          'SHIBA_PASSWORD=${{ secrets.SHIBA_PASSWORD }}' \
          'ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY_STAGING }}' \
          'SENTRY_DSN=${{ secrets.SENTRY_DSN }}' \
          'SENTRY_ENVIRONMENT=staging' \
          'SENTRY_RELEASE=${{ steps.generate-release.outputs.RELEASE }}' \
          'MIXPANEL_API-KEY=${{ secrets.MIXPANEL_API_KEY_STAGING }}' \
          'S3_STAGING_BUCKET=${{ secrets.S3_STAGING_BUCKET }}' \
          'CLOUD_AWS_CREDENTIALS_ACCESS-KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}' \
          'CLOUD_AWS_CREDENTIALS_SECRET-KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}'
      - name: Merge main -> staging
        uses: MaximeHeckel/github-action-merge-fast-forward@v1.1.0
        with:
          branchtomerge: main
          branch: staging
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: codeforamerica
          SENTRY_PROJECT: shiba
        with:
          environment: staging
      - name: Announce on Slack
        if: ${{ always() }}
        uses: innocarpe/actions-slack@v1
        with:
          status: ${{ job.status }}
          success_text: 'Deploy to Aptible staging succeeded :smile:'
          failure_text: 'Deploy to Aptible staging failed :frowning:'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
