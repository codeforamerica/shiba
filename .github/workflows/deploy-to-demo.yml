name: Deploy to demo

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to be released'
        required: true
        default: staging

jobs:
  test:
    name: Run test suite (non-staging only)
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: shiba
          POSTGRES_PASSWORD: shiba
          POSTGRES_DB: shiba-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - name: Set up ChromeDriver
        if: github.event.inputs.branch != 'staging'
        uses: nanasess/setup-chromedriver@v1.0.1
      - name: Set up JDK
        if: github.event.inputs.branch != 'staging'
        uses: actions/setup-java@v1
        with:
          java-version: '16'
      - name: Grant execute permission for gradlew
        if: github.event.inputs.branch != 'staging'
        run: chmod +x gradlew
      - name: Test with Gradle (only on branches that aren't staging)
        run: |
          if [[ "${{ github.event.inputs.branch }}" == "staging" ]]; then
            exit 0
          else
            S3_BUCKET=${{ secrets.S3_TEST_BUCKET }} \
                  env 'CLOUD_AWS_CREDENTIALS_ACCESS-KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}' \
                  env 'CLOUD_AWS_CREDENTIALS_SECRET-KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}' \
                  ./gradlew unit-test db-test journey-test pdf-test ccap-test validation-test document-test
          fi
        env:
          S3_BUCKET: ${{ secrets.S3_DEMO_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}
      - name: Announce test failure on slack
        if: ${{ failure() }}
        uses: innocarpe/actions-slack@v1
        with:
          status: ${{ job.status }}
          failure_text: 'Tests failed in CI! :disappointed:'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
  draft-release:
    name: Draft a new release
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Create tag name
        id: create-tagname
        run: echo "::set-output name=TAG_NAME::$(date +'%Y-%m-%d-%H%M')"
      - name: Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
          release_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
          commitish: ${{ github.event.inputs.branch }}
          body: |
            Fill in details about this release
          draft: true
          prerelease: true
  deploy:
    name: Deploy to Aptible demo
    needs: draft-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - run: git fetch --prune --unshallow
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.0.3
        with:
          key: ${{ secrets.APTIBLE_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.APTIBLE_KNOWN_HOSTS }}
      - name: Generate Sentry release name from sha
        id: generate-release
        run: echo "::set-output name=RELEASE::$(git rev-parse HEAD)"
      - name: Push to Aptible remote branch
        run: git push --force git@beta.aptible.com:mn-shiba-prod/demo.git "${{ github.event.inputs.branch }}:demo-deploy"
      - name: Install Aptible CLI and deploy to Aptible
        run: |
          wget -O aptible-package https://omnibus-aptible-toolbelt.s3.amazonaws.com/aptible/omnibus-aptible-toolbelt/master/206/pkg/aptible-toolbelt_0.16.5%2B20200508143656~ubuntu.16.04-1_amd64.deb
          sudo dpkg -i aptible-package
          aptible login --email=${{ secrets.APTIBLE_USERNAME }} --password=${{ secrets.APTIBLE_PASSWORD}}
          aptible deploy --app demo --git-commitish demo-deploy SPRING_PROFILES_ACTIVE=demo \
          'MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}' \
          'SMARTY_STREET_AUTH_ID=${{ secrets.SMARTY_STREET_AUTH_ID }}' \
          'SMARTY_STREET_AUTH_TOKEN=${{ secrets.SMARTY_STREET_AUTH_TOKEN }}' \
          'CLIENT_KEYSTORE-PASSWORD=${{ secrets.CLIENT_KEYSTORE_PASSWORD}}' \
          'CLIENT_TRUSTSTORE-PASSWORD=${{ secrets.CLIENT_TRUSTSTORE_PASSWORD }}' \
          'MNIT-ESB_USERNAME=${{ secrets.MNIT_USERNAME }}' \
          'MNIT-ESB_PASSWORD=${{ secrets.MNIT_PASSWORD }}' \
          'SHIBA_USERNAME=${{ secrets.SHIBA_USERNAME }}' \
          'SHIBA_PASSWORD=${{ secrets.SHIBA_PASSWORD }}' \
          'ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY_DEMO }}' \
          'SENTRY_DSN=${{ secrets.SENTRY_DSN }}' \
          'SENTRY_ENVIRONMENT=demo' \
          'SENTRY_RELEASE=${{ steps.generate-release.outputs.RELEASE }}' \
          'MIXPANEL_API-KEY=${{ secrets.MIXPANEL_API_KEY_STAGING }}' \
          'S3_BUCKET=${{ secrets.S3_DEMO_BUCKET }}' \
          'AWS_ACCESS_KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_ACCESS_KEY }}' \
          'AWS_SECRET_KEY=${{ secrets.CLOUD_AWS_CREDENTIALS_SECRET_KEY }}' \
          'SSL_PROTOCOLS_OVERRIDE=TLSv1.2'
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: codeforamerica
          SENTRY_PROJECT: shiba
        with:
          environment: demo
      - name: Announce on Slack
        if: ${{ always() }}
        uses: innocarpe/actions-slack@v1
        with:
          status: ${{ job.status }}
          success_text: 'Deploy to Aptible demo succeeded :smile:'
          failure_text: 'Deploy to Aptible demo failed :frowning:'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
