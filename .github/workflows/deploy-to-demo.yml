name: Deploy to demo

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Target branch to be released'
        required: true
        default: staging

jobs:
  draft-release:
    name: Draft a new release
    runs-on: ubuntu-latest
    outputs:
      tag_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
    steps:
      - name: Create tag name
        id: create-tagname
        run: echo "::set-output name=TAG_NAME::$(date +'%Y-%m-%d-%H%M')"
      - name: Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
          release_name: release-${{ steps.create-tagname.outputs.TAG_NAME }}
          commitish: ${{ github.event.inputs.branch }}
          body: |
            Fill in details about this release
          draft: true
          prerelease: true
  deploy:
    name: Deploy to Aptible demo
    needs: draft-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
      - run: git fetch --prune --unshallow
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.3.1
        with:
          key: ${{ secrets.APTIBLE_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.APTIBLE_KNOWN_HOSTS }}
      - name: Generate Sentry release name from sha
        id: generate-release
        run: echo "::set-output name=RELEASE::$(git rev-parse HEAD)"
      - name: Push to Aptible remote branch
        run: git push --force git@beta.aptible.com:mn-shiba-prod/demo.git "${{ github.event.inputs.branch }}:demo-deploy"
      - name: Install Aptible CLI and deploy to Aptible
        run: |
          wget -O aptible-package https://omnibus-aptible-toolbelt.s3.amazonaws.com/aptible/omnibus-aptible-toolbelt/master/206/pkg/aptible-toolbelt_0.16.5%2B20200508143656~ubuntu.16.04-1_amd64.deb
          sudo dpkg -i aptible-package
          aptible login --email=${{ secrets.APTIBLE_USERNAME }} --password=${{ secrets.APTIBLE_PASSWORD}}
          aptible deploy --app demo --git-commitish demo-deploy SPRING_PROFILES_ACTIVE=demo \
          'MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}' \
          'SMARTY_STREET_AUTH_ID=${{ secrets.SMARTY_STREET_AUTH_ID }}' \
          'SMARTY_STREET_AUTH_TOKEN=${{ secrets.SMARTY_STREET_AUTH_TOKEN }}' \
          'CLIENT_KEYSTORE-PASSWORD=${{ secrets.CLIENT_KEYSTORE_PASSWORD}}' \
          'CLIENT_TRUSTSTORE-PASSWORD=${{ secrets.CLIENT_TRUSTSTORE_PASSWORD }}' \
          'MNIT-ESB_USERNAME=${{ secrets.MNIT_USERNAME }}' \
          'MNIT-ESB_PASSWORD=${{ secrets.MNIT_PASSWORD }}' \
          'SHIBA_USERNAME=${{ secrets.SHIBA_USERNAME }}' \
          'SHIBA_PASSWORD=${{ secrets.SHIBA_PASSWORD }}' \
          'ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY_DEMO }}' \
          'SENTRY_DSN=${{ secrets.SENTRY_DSN }}' \
          'SENTRY_ENVIRONMENT=demo' \
          'SENTRY_RELEASE=${{ steps.generate-release.outputs.RELEASE }}' \
          'MIXPANEL_API-KEY=${{ secrets.MIXPANEL_API_KEY_STAGING }}' \
          'SSL_PROTOCOLS_OVERRIDE=TLSv1.2' \
          'AZURE_CONNECTION_STRING=${{ secrets.AZURE_CONNECTION_STRING_STAGING }}' \
          'AZURE_CONTAINER_NAME=${{ secrets.AZURE_CONTAINER_NAME_DEMO }}' \
          'MNIT-FILENET_USERNAME=${{ secrets.MNIT_FILENET_USERNAME_ATST }}' \
          'MNIT-FILENET_PASSWORD=${{ secrets.MNIT_FILENET_PASSWORD_ATST }}'
      - name: Create Sentry release
        uses: getsentry/action-release@v1.1.6
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: codeforamerica
          SENTRY_PROJECT: shiba
        with:
          environment: demo
          version: ${{ needs.draft-release.outputs.tag_name }}
      - name: Announce on Slack
        if: ${{ always() }}
        uses: innocarpe/actions-slack@v1
        with:
          status: ${{ job.status }}
          success_text: 'Deploy to Aptible demo succeeded :smile:'
          failure_text: 'Deploy to Aptible demo failed :frowning:'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  # Deploy to mnit demo steps:
  # 1. find latest git release
  # 2. Login to openshift non-prod
  # 3. update build config, set git ref to the release tag
  # 4. update build config, set image tag to the release tag
  # 5. build image
  # 6. update deployment config to the release tag
  # 7. rollout updated image
  mnitdeploy:
    name: deploy to mnit demo
    needs: draft-release
    runs-on: ubuntu-latest
    steps:
    - name: Authenticate and set context for non-prod
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_NON_PROD }}
        openshift_token: ${{ secrets.OPENSHIFT_TOKEN_NON_PROD }}
        namespace: ${{ secrets.OPENSHIFT_NAMESPACE_NON_PROD }}
    - name: update and run build
      run: |
        oc patch bc mn-benefits-release -p '{"spec":{"source":{"git":{"ref":"${{ github.event.inputs.branch }}"}}}}'
        oc patch bc mn-benefits-release -p '{"spec":{"output":{"to":{"name":"mn-benefits:${{ needs.draft-release.outputs.tag_name }}"}}}}'
        oc start-build mn-benefits-release --follow
        oc patch dc mn-benefits-atst -p '{"spec":{"triggers":[{"type": "ImageChange", "imageChangeParams":{"from":{"name":"mn-benefits:${{ needs.draft-release.outputs.tag_name }}"}, "containerNames":["mn-benefits-atst"]}}]}}'
        oc rollout latest dc/mn-benefits-atst
    - name: Announce on Slack
      if: ${{ always() }}
      uses: innocarpe/actions-slack@v1
      with:
        status: ${{ job.status }}
        success_text: 'Deploy to MNIT demo succeeded :smile:'
        failure_text: 'Deploy to MNIT demo failed :frowning:'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
