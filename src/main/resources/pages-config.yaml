conditionDefinitions:
  - &onlyApplyingForOthers?
    pageName: choosePrograms
    input: programs
    value: NONE
  - &livesAlone?
    pageName: addHouseholdMembers
    input: addHouseholdMembers
    value: "false"
  - &doesNotLiveAlone?
    logicalOperator: OR
    conditions:
      - *onlyApplyingForOthers?
      - pageName: addHouseholdMembers
        input: addHouseholdMembers
        value: "true"
  - &isHomeless?
    pageName: homeAddress
    input: isHomeless
    matcher: DOES_NOT_CONTAIN
    value: "true"
  - &isApplicantsJob?
    pageName: householdSelectionForIncome
    input: whoseJobIsIt
    value: "applicant"
    matcher: CONTAINS_SUBSTRING
  - &doesNotHaveMortgage?
    pageName: homeExpenses
    input: homeExpenses
    value: MORTGAGE
    matcher: DOES_NOT_CONTAIN
  - &doesNotHaveRent?
    pageName: homeExpenses
    input: homeExpenses
    value: RENT
    matcher: DOES_NOT_CONTAIN
  - &doesNotHaveRoomAndBoard?
    pageName: homeExpenses
    input: homeExpenses
    value: ROOM_AND_BOARD
    matcher: DOES_NOT_CONTAIN
  - &hasMortgage?
    pageName: homeExpenses
    input: homeExpenses
    value: MORTGAGE
  - &hasRent?
    pageName: homeExpenses
    input: homeExpenses
    value: RENT
  - &hasRoomAndBoard?
    pageName: homeExpenses
    input: homeExpenses
    value: ROOM_AND_BOARD
  - &applicantChoseSNAP?
    pageName: choosePrograms
    value: SNAP
    input: programs
  - &applicantDidNotChooseProgram?
    pageName: choosePrograms
    input: programs
    matcher: DOES_NOT_CONTAIN
  - &applicantChoseAtLeastOneProgram?
    pageName: choosePrograms
    value: NONE
    input: programs
    matcher: DOES_NOT_CONTAIN
  - &applicantDidNotChooseCCAP?
    <<: *applicantDidNotChooseProgram?
    value: CCAP
  - &applicantDidNotChooseGRH?
    <<: *applicantDidNotChooseProgram?
    value: GRH
  - &householdMemberDidNotChooseProgram?
    pageName: householdMemberInfo
    input: programs
    matcher: DOES_NOT_CONTAIN
  - &householdMemberChoseAtLeastOneProgram?
    pageName: householdMemberInfo
    input: programs
    matcher: CONTAINS_STRING_OTHER_THAN
    value: NONE
  - &householdMemberDidNotChooseCCAP?
    <<: *householdMemberDidNotChooseProgram?
    value: CCAP
  - &noOneChoseCCAP?
    logicalOperator: AND
    conditions:
      - *applicantDidNotChooseCCAP?
      - logicalOperator: OR
        conditions:
          - *householdMemberDidNotChooseCCAP?
          - *livesAlone?
  - &noOneChoseSNAP?
    logicalOperator: AND
    conditions:
      - <<: *applicantDidNotChooseProgram?
        value: SNAP
      - logicalOperator: OR
        conditions:
          - <<: *householdMemberDidNotChooseProgram?
            value: SNAP
          - *livesAlone?
  - &noOneChoseCASH?
    logicalOperator: AND
    conditions:
      - <<: *applicantDidNotChooseProgram?
        value: CASH
      - logicalOperator: OR
        conditions:
          - <<: *householdMemberDidNotChooseProgram?
            value: CASH
          - *livesAlone?
  - &noOneChoseEA?
    logicalOperator: AND
    conditions:
      - <<: *applicantDidNotChooseProgram?
        value: EA
      - logicalOperator: OR
        conditions:
          - <<: *householdMemberDidNotChooseProgram?
            value: EA
          - *livesAlone?
  - &noOneChoseGRH?
    logicalOperator: AND
    conditions:
      - <<: *applicantDidNotChooseProgram?
        value: GRH
      - logicalOperator: OR
        conditions:
          - <<: *householdMemberDidNotChooseProgram?
            value: GRH
          - *livesAlone?
  - &skipRecommendationForProofOfIncome?
    logicalOperator: OR
    conditions:
      - pageName: employmentStatus
        input: areYouWorking
        value: "false"
      - logicalOperator: AND
        conditions:
          - *noOneChoseSNAP?
          - *noOneChoseCASH?
          - *noOneChoseEA?
          - *noOneChoseGRH?
          - *noOneChoseCCAP?
  - &skipRecommendationForProofOfHousingCosts?
    logicalOperator: OR
    conditions:
      - pageName: homeExpenses
        input: homeExpenses
        value: NONE_OF_THE_ABOVE
      - logicalOperator: AND
        conditions:
          - *noOneChoseSNAP?
          - *noOneChoseCASH?
          - *noOneChoseEA?
  - &skipRecommendationForProofOfJobLoss?
    logicalOperator: OR
    conditions:
      - pageName: workSituation
        input: hasWorkSituation
        value: "false"
      - logicalOperator: AND
        conditions:
          - *noOneChoseSNAP?
          - *noOneChoseCASH?
          - *noOneChoseGRH?
  - &skipRecommendationForProofOfMedicalExpenses?
    logicalOperator: OR
    conditions:
      - conditions:
          - pageName: medicalExpenses
            input: medicalExpenses
            value: MEDICAL_INSURANCE_PREMIUMS
            matcher: DOES_NOT_CONTAIN
          - pageName: medicalExpenses
            input: medicalExpenses
            value: DENTAL_INSURANCE_PREMIUMS
            matcher: DOES_NOT_CONTAIN
          - pageName: medicalExpenses
            input: medicalExpenses
            value: VISION_INSURANCE_PREMIUMS
            matcher: DOES_NOT_CONTAIN
      - *noOneChoseCCAP?
  - &skipDocumentUpload?
    conditions:
      - *skipRecommendationForProofOfIncome?
      - *skipRecommendationForProofOfHousingCosts?
      - *skipRecommendationForProofOfJobLoss?
      - *skipRecommendationForProofOfMedicalExpenses?
  - &livesAloneOrIsApplicantsJob?
    logicalOperator: OR
    conditions:
      - *isApplicantsJob?
      - *livesAlone?
pageDefinitions:
  - &landing
    name: landing
    pageTitle: landing.title
    customPage: true
  - &prepareToApply
    name: prepareToApply
    pageTitle: prepare-to-apply.title
    headerKey: prepare-to-apply.how-this-works
    contextFragment: prepareToApplyContextFragment
    hasPrimaryButton: false
  - &addingDocsIsEasy
    name: addingDocsIsEasy
    pageTitle: adding-docs-is-easy.title
    headerKey: adding-docs-is-easy.adding-documents-to-your-application-is-easy
    contextFragment: cameraContextFragment
  - &languagePreferences
    name: languagePreferences
    pageTitle: language-preferences.title
    headerKey: language-preferences.language-preferences
    contextFragment: languagePreferencesContextFragment
    inputs:
      - name: writtenLanguage
        type: SELECT
        promptMessage:
          promptMessageKey: language-preferences.what-language-do-you-prefer-to-read-or-write
        helpMessageKey: language-preferences.the-county-will-do-their-best-to-provide-documents-in-your-preferred-language
        options:
          selectableOptions:
            - value: ENGLISH
              messageKey: language-preferences.english
            - value: SPANISH
              messageKey: language-preferences.spanish
            - value: SOOMAALI
              messageKey: language-preferences.soomaali
            - value: VIETNAMESE
              messageKey: language-preferences.vietnamese
            - value: RUSSIAN
              messageKey: language-preferences.russian
            - value: HMOOB
              messageKey: language-preferences.hmoob
      - name: spokenLanguage
        type: SELECT
        promptMessage:
          promptMessageKey: language-preferences.what-language-do-you-prefer-to-speak
        helpMessageKey: language-preferences.the-county-will-do-their-best-to-connect-you-with-someone-who-speaks-your
        options:
          selectableOptions:
            - value: ENGLISH
              messageKey: language-preferences.english
            - value: SPANISH
              messageKey: language-preferences.spanish
            - value: SOOMAALI
              messageKey: language-preferences.soomaali
            - value: VIETNAMESE
              messageKey: language-preferences.vietnamese
            - value: RUSSIAN
              messageKey: language-preferences.russian
            - value: HMOOB
              messageKey: language-preferences.hmoob
      - name: needInterpreter
        type: RADIO
        promptMessage:
          promptMessageKey: language-preferences.do-you-need-an-interpreter
        options:
          selectableOptions:
            - value: "true"
              messageKey: general.inputs.yes
            - value: "false"
              messageKey: general.inputs.no
  - &choosePrograms
    name: choosePrograms
    pageTitle: choose-programs.title
    headerKey: choose-programs.what-do-you-need-help-with-today
    headerHelpMessageKey: general.check-all-that-apply
    contextFragment: chooseProgramsContextFragment
    inputs:
      - name: programs
        type: CHECKBOX
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          selectableOptions:
            - value: SNAP
              messageKey: choose-programs.food-snap
              helpMessageKey: choose-programs.food-snap-help
              helpIcon: icon-apple
            - value: CASH
              messageKey: choose-programs.cash-programs
              helpMessageKey: choose-programs.cash-programs-help
              helpIcon: icon-dollar-circle
            - value: CCAP
              messageKey: choose-programs.child-care-assistance
              helpMessageKey: choose-programs.child-care-assistance-help
              helpIcon: icon-child-care
            - value: EA
              messageKey: choose-programs.emergency-assistance
              helpMessageKey: choose-programs.emergency-assistance-help
              helpIcon: icon-home
            - value: GRH
              messageKey: choose-programs.housing-support-group-residential-housing
              helpMessageKey: choose-programs.housing-grh-help
              helpIcon: icon-apartment
            - value: NONE
              messageKey: choose-programs.none-of-the-above
              helpIcon: icon-people
              isNone: true
    alertBox:
      type: CHOOSE_NONE_WARNING
      message: choose-programs.you-will-be-asked
  - &introBasicInfo
    name: introBasicInfo
    pageTitle: intro-basic-info.title
    hasPrimaryButton: false
  - &personalInfo
    name: personalInfo
    pageTitle: personal-info.title
    headerKey: personal-info.tell-us-about-yourself
    contextFragment: personalInfoContextFragment
    inputs:
      - name: firstName
        type: TEXT
        promptMessage:
          promptMessageKey: personal-info.whats-your-first-name
        helpMessageKey: personal-info.legally-as-it-appears-on-your-id
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-first-name
      - name: lastName
        type: TEXT
        promptMessage:
          promptMessageKey: personal-info.whats-your-last-name
        helpMessageKey: personal-info.legally-as-it-appears-on-your-id
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-last-name
      - name: otherName
        type: TEXT
        promptMessage:
          promptMessageKey: personal-info.list-any-names-that-you-have-gone-by-in-the-past
        helpMessageKey: personal-info.include-maiden-names-or-legal-changes
      - name: dateOfBirth
        type: DATE
        validators:
          - validation: DATE
            errorMessageKey: general.validation.please-enter-your-birthday-in-this-format
            condition:
              input: dateOfBirth
              matcher: NOT_EMPTY
          - validation: DOB_VALID
            condition:
              input: dateOfBirth
              matcher: NOT_EMPTY
            errorMessageKey: general.validation.make-sure-to-provide-a-dob-between-1900-and-present
        promptMessage:
          promptMessageKey: personal-info.when-were-you-born
      - name: ssn
        type: SSN
        validators:
          - validation: SSN
            errorMessageKey: general.validation.make-sure-your-SSN-has-9-digits
            condition:
              input: ssn
              matcher: NOT_EMPTY
        promptMessage:
          promptMessageKey: personal-info.whats-your-social-security-number
        helpMessageKey: personal-info.if-you-have-one-we-strongly-recommend-including-it-here-your-caseworker-will
      - name: maritalStatus
        type: RADIO
        promptMessage:
          promptMessageKey: personal-info.whats-your-marital-status
        options:
          selectableOptions:
            - value: NEVER_MARRIED
              messageKey: general.never-married
            - value: MARRIED_LIVING_WITH_SPOUSE
              messageKey: general.married-living-with-spouse
            - value: MARRIED_NOT_LIVING_WITH_SPOUSE
              messageKey: general.married-not-living-with-spouse
            - value: LEGALLY_SEPARATED
              messageKey: general.legally-separated
            - value: DIVORCED
              messageKey: general.divorced
            - value: WIDOWED
              messageKey: general.widowed
      - name: sex
        type: RADIO
        promptMessage:
          promptMessageKey: personal-info.whats-your-sex
        helpMessageKey: personal-info.legally-as-it-appears-on-your-id-we-regret-that-this-question-is-limited
        options:
          selectableOptions:
            - value: FEMALE
              messageKey: general.female
            - value: MALE
              messageKey: general.male
            - value: RATHER_NOT_SAY
              messageKey: general.rather-not-say
      - name: livedInMnWholeLife
        type: RADIO
        promptMessage:
          promptMessageKey: personal-info.have-you-lived-in-minnesota-your-whole-life
        options:
          selectableOptions:
            - value: "false"
              messageKey: general.inputs.no
            - value: "true"
              messageKey: general.inputs.yes
        followUpValues:
          - "true"
        followUps:
          - name: moveToMnDate
            type: DATE
            validators:
              - validation: DATE
                errorMessageKey: general.validation.please-enter-the-date-in-this-format
                condition:
                  input: moveToMnDate
                  matcher: NOT_EMPTY
            promptMessage:
              promptMessageKey: personal-info.when-did-you-move-to-minnesota
          - name: moveToMnPreviousCity
            type: TEXT
            promptMessage:
              promptMessageKey: personal-info.what-state-did-you-move-from
  - &contactInfo
    name: contactInfo
    pageTitle: contact-info.title
    headerKey: contact-info.how-can-we-stay-in-touch-with-you
    headerHelpMessageKey: contact-info.most-of-our-communication-will-be-through-mail
    contextFragment: contactInfoContextFragment
    inputs:
      - name: phoneNumber
        type: PHONE
        promptMessage:
          promptMessageKey: contact-info.whats-your-phone-number
        validators:
          - validation: PHONE_STARTS_WITH_ONE
            errorMessageKey: general.validation.area-codes-can-not-begin-with-1
          - validation: PHONE
            errorMessageKey: general.validation.make-sure-to-enter-a-phone-number-with-10-digits
      - name: email
        type: TEXT
        promptMessage:
          promptMessageKey: contact-info.whats-your-email-address
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.email
            condition:
              input: phoneOrEmail
              value: EMAIL
          - validation: EMAIL
            errorMessageKey: general.validation.email
            condition:
              input: email
              matcher: NOT_EMPTY
      - name: phoneOrEmail
        type: CHECKBOX
        promptMessage:
          promptMessageKey: contact-info.how-can-we-send-you-updates-and-reminders-about-your-case-in-the-future
        options:
          selectableOptions:
            - value: TEXT
              messageKey: contact-info.text-me
            - value: EMAIL
              messageKey: contact-info.email-me
  - &homeAddress
    name: homeAddress
    headerKey: home-address.where-are-you-currently-living
    pageTitle: home-address.title
    inputs:
      - name: streetAddress
        type: TEXT
        promptMessage:
          promptMessageKey: home-address.what-is-the-street-address
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
            condition:
              input: isHomeless
              matcher: NONE_SELECTED
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-home-address-or-select-no-use-a-different-address-for-mail
            condition:
              input: sameMailingAddress
              value: "true"
      - name: apartmentNumber
        type: TEXT
        promptMessage:
          promptMessageKey: home-address.apartment-number
      - name: city
        type: TEXT
        promptMessage:
          promptMessageKey: home-address.what-is-the-city
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
            condition:
              input: isHomeless
              matcher: NONE_SELECTED
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-home-address-or-select-no-use-a-different-address-for-mail
            condition:
              input: sameMailingAddress
              value: "true"
      - name: state
        type: TEXT
        promptMessage:
          promptMessageKey: home-address.what-is-the-state
        readOnly: true
        defaultValue: MN
      - name: zipCode
        type: TEXT
        promptMessage:
          promptMessageKey: home-address.what-is-the-zip-code
        validators:
          - validation: ZIPCODE
            errorMessageKey: general.validation.make-sure-to-enter-a-zip-code-with-5-digits
            condition:
              input: isHomeless
              matcher: NONE_SELECTED
          - validation: ZIPCODE
            errorMessageKey: general.validation.make-sure-to-provide-a-home-address-or-select-no-use-a-different-address-for-mail
            condition:
              input: sameMailingAddress
              value: "true"
      - name: isHomeless
        type: CHECKBOX
        options:
          selectableOptions:
            - value: "true"
              messageKey: home-address.i-dont-have-a-permanent-address
      - name: sameMailingAddress
        type: RADIO
        promptMessage:
          promptMessageKey: home-address.is-this-the-best-place-for-you-to-receive-mail
        helpMessageKey: home-address.the-county-will-need-a-place-to-send-you-mail-for-the-next-3-months
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          selectableOptions:
            - value: "true"
              messageKey: home-address.yes-send-mail-here
            - value: "false"
              messageKey: home-address.no-use-a-different-address-for-mail
  - &homeAddress2
    name: homeAddress
    headerKey: home-address.where-are-you-currently-living
    pageTitle: home-address.title
    contextFragment: addressContextFragment
    inputs:
      - name: sameMailingAddress
        type: HIDDEN
        defaultValue: placeholder
      - name: isHomeless
        type: CUSTOM
        customInputFragment: addressInputFragment
        options:
          selectableOptions:
            - value: "true"
              messageKey: home-address.i-dont-have-a-permanent-address
        followUps:
          - name: streetAddress
            type: TEXT
            promptMessage:
              promptMessageKey: home-address.what-is-the-street-address
            validators:
              - validation: NOT_BLANK
                errorMessageKey: general.validation.make-sure-you-answer-this-question
                condition: *isHomeless?
          - name: apartmentNumber
            type: TEXT
            promptMessage:
              promptMessageKey: home-address.apartment-number
          - name: city
            type: TEXT
            promptMessage:
              promptMessageKey: home-address.what-is-the-city
            validators:
              - validation: NOT_BLANK
                errorMessageKey: general.validation.make-sure-you-answer-this-question
                condition: *isHomeless?
          - name: state
            type: TEXT
            promptMessage:
              promptMessageKey: home-address.what-is-the-state
            readOnly: true
            defaultValue: MN
          - name: zipCode
            type: TEXT
            promptMessage:
              promptMessageKey: home-address.what-is-the-zip-code
            validators:
              - validation: ZIPCODE
                errorMessageKey: general.validation.make-sure-to-enter-a-zip-code-with-5-digits
                condition: *isHomeless?
  - &whereToSendMail
    name: whereToSendMail
    headerKey: where-to-send-mail.the-county-will-need-a-place-to-send-you-mail
    headerHelpMessageKey: where-to-send-mail.this-could-be-a-friend-or-family-address
    pageTitle: where-to-send-mail.title
    contextFragment: mailContextFragment
    primaryButtonTextKey: where-to-send-mail.I-have-a-place-to-get-mail
    subtleLinkTextKey: where-to-send-mail.I-will-pick-up-my-mail-at-a-post-office
  - &cityForGeneralDelivery
    name: cityForGeneralDelivery
    headerKey: city-for-general-delivery.help-us-route-your-mail
    pageTitle: city-for-general-delivery.title
    contextFragment: mailContextFragment
    inputs:
      - name: whatIsTheCity
        type: CUSTOM
        customInputFragment: selectCityCustomInput
        validators:
          - validation: NOT_BLANK
            errorMessageKey: city-for-general-delivery.make-sure-to-provide-a-city
  - &generalDeliveryAddress
    name: generalDeliveryAddress
    pageTitle: general-delivery-address.title
    headerKey: general-delivery-address.the-county-will-send-all-mail-about-this-application-to
    contextFragment: mailContextFragment
  - &mailingAddress2
    name: mailingAddress
    headerKey: mailing-address.where-can-the-county-send-your-mail
    pageTitle: mailing-address.title
    contextFragment: mailContextFragment
    inputs:
      - name: sameMailingAddress
        type: CUSTOM
        customInputFragment: addressInputFragment
        options:
          selectableOptions:
            - value: "true"
              messageKey: mailing-address.same-as-my-current-living-address
        followUps:
          - name: streetAddress
            type: TEXT
            promptMessage:
              promptMessageKey: mailing-address.what-is-the-street-address
            validators:
              - validation: NOT_BLANK
                errorMessageKey: general.validation.make-sure-you-answer-this-question
                condition:
                  input: sameMailingAddress
                  matcher: DOES_NOT_CONTAIN
                  value: "true"
          - name: apartmentNumber
            type: TEXT
            promptMessage:
              promptMessageKey: mailing-address.apartment-number
          - name: city
            type: TEXT
            promptMessage:
              promptMessageKey: mailing-address.what-is-the-city
            validators:
              - validation: NOT_BLANK
                errorMessageKey: general.validation.make-sure-you-answer-this-question
                condition:
                  input: sameMailingAddress
                  matcher: DOES_NOT_CONTAIN
                  value: "true"
          - name: state
            type: TEXT
            promptMessage:
              promptMessageKey: mailing-address.what-is-the-state
            validators:
              - validation: STATE
                errorMessageKey: general.validation.make-sure-to-provide-a-valid-2-letter-state-code
                condition:
                  input: sameMailingAddress
                  matcher: DOES_NOT_CONTAIN
                  value: "true"
            defaultValue: MN
          - name: zipCode
            type: TEXT
            promptMessage:
              promptMessageKey: mailing-address.what-is-the-zip-code
            validators:
              - validation: ZIPCODE
                errorMessageKey: general.validation.make-sure-to-enter-a-zip-code-with-5-digits
                condition:
                  input: sameMailingAddress
                  matcher: DOES_NOT_CONTAIN
                  value: "true"
  - &mailingAddress
    name: mailingAddress
    pageTitle: mailing-address.title
    headerKey: mailing-address.where-can-the-county-send-your-mail
    inputs:
      - name: sameMailingAddress
        type: HIDDEN
        defaultValue: placeholder
      - name: streetAddress
        type: TEXT
        promptMessage:
          promptMessageKey: mailing-address.what-is-the-street-address
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
      - name: apartmentNumber
        type: TEXT
        promptMessage:
          promptMessageKey: mailing-address.apartment-number
      - name: city
        type: TEXT
        promptMessage:
          promptMessageKey: mailing-address.what-is-the-city
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
      - name: state
        type: TEXT
        promptMessage:
          promptMessageKey: mailing-address.what-is-the-state
        validators:
          - validation: STATE
            errorMessageKey: general.validation.make-sure-to-provide-a-valid-2-letter-state-code
        defaultValue: MN
      - name: zipCode
        type: TEXT
        promptMessage:
          promptMessageKey: mailing-address.what-is-the-zip-code
        validators:
          - validation: ZIPCODE
            errorMessageKey: general.validation.make-sure-to-enter-a-zip-code-with-5-digits
  - &reviewInfo
    name: reviewInfo
    pageTitle: review-info.title
    headerKey: review-info.lets-review-your-info
    contextFragment: docWithMagnifyingGlassContextFragment
    primaryButtonTextKey: review-info.this-looks-correct
    subtleLinkTextKey:
      conditionalValues:
        - value: review-info.submit-application-now-with-only-the-above-information
          condition: *applicantChoseSNAP?
  - &addHouseholdMembers
    name: addHouseholdMembers
    headerKey: add-household-members.do-you-want-to-add-household-members
    headerHelpMessageKey: add-household-members.add-everyone-in-your-home
    pageTitle: add-household-members.title
    hasPrimaryButton: false
    inputs:
      - name: addHouseholdMembers
        type: YES_NO
  - &startHousehold
    name: startHousehold
    pageTitle: start-household.title
    hasPrimaryButton: false
  - &householdMemberInfo
    name: householdMemberInfo
    pageTitle: household-member-info.title
    headerKey: household-member-info.add-a-person-who-lives-with-you
    inputs:
      - name: firstName
        type: TEXT
        promptMessage:
          promptMessageKey: household-member-info.whats-their-first-name
        helpMessageKey: household-member-info.legally-as-it-appears-on-their-id
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-first-name
      - name: lastName
        type: TEXT
        promptMessage:
          promptMessageKey: household-member-info.whats-their-last-name
        helpMessageKey: household-member-info.legally-as-it-appears-on-their-id
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-last-name
      - name: otherName
        type: TEXT
        promptMessage:
          promptMessageKey: household-member-info.list-any-other-names-they-have-gone-by-in-the-past
        helpMessageKey: personal-info.include-maiden-names-or-legal-changes
      - name: dateOfBirth
        type: DATE
        promptMessage:
          promptMessageKey: household-member-info.when-were-they-born
        validators:
          - validation: DATE
            condition:
              input: dateOfBirth
              matcher: NOT_EMPTY
            errorMessageKey: general.validation.please-enter-your-birthday-in-this-format
          - validation: DOB_VALID
            condition:
              input: dateOfBirth
              matcher: NOT_EMPTY
            errorMessageKey: general.validation.make-sure-to-provide-a-dob-between-1900-and-present
      - name: maritalStatus
        type: RADIO
        promptMessage:
          promptMessageKey: household-member-info.whats-their-martial-status
        options:
          selectableOptions:
            - value: NEVER_MARRIED
              messageKey: general.never-married
            - value: MARRIED_LIVING_WITH_SPOUSE
              messageKey: general.married-living-with-spouse
            - value: MARRIED_NOT_LIVING_WITH_SPOUSE
              messageKey: general.married-not-living-with-spouse
            - value: LEGALLY_SEPARATED
              messageKey: general.legally-separated
            - value: DIVORCED
              messageKey: general.divorced
            - value: WIDOWED
              messageKey: general.widowed
      - name: sex
        type: RADIO
        promptMessage:
          promptMessageKey: household-member-info.whats-their-sex
        helpMessageKey: household-member-info.legally-as-it-appears-on-their-id-we-regret-that-this-question-is-limited
        options:
          selectableOptions:
            - value: FEMALE
              messageKey: general.female
            - value: MALE
              messageKey: general.male
            - value: RATHER_NOT_SAY
              messageKey: general.rather-not-say
      - name: livedInMnWholeLife
        type: RADIO
        promptMessage:
          promptMessageKey: household-member-info.have-they-lived-in-minnesota-their-whole-life
        options:
          selectableOptions:
            - value: "false"
              messageKey: general.inputs.no
            - value: "true"
              messageKey: general.inputs.yes
        followUpValues:
          - "true"
        followUps:
          - name: moveToMnDate
            type: DATE
            validators:
              - validation: DATE
                condition:
                  input: moveToMnDate
                  matcher: NOT_EMPTY
                errorMessageKey: general.validation.make-sure-you-answer-this-question
            promptMessage:
              promptMessageKey: household-member-info.when-did-they-move-to-minnesota
          - name: moveToMnPreviousState
            type: TEXT
            promptMessage:
              promptMessageKey: household-member-info.what-state-did-they-move-from
      - name: relationship
        type: TEXT
        promptMessage:
          promptMessageKey: household-member-info.whats-their-relationship-to-you
      - name: programs
        type: CHECKBOX
        promptMessage:
          promptMessageKey: household-member-info.what-do-they-need-help-with
        helpMessageKey: general.check-all-that-apply
        followUpValues:
          - SNAP
          - CASH
          - EA
          - CCAP
        followUps:
          - name: ssn
            type: SSN
            validators:
              - validation: SSN
                errorMessageKey: general.validation.make-sure-your-SSN-has-9-digits
                condition:
                  input: ssn
                  matcher: NOT_EMPTY
            promptMessage:
              promptMessageKey: household-member-info.whats-their-social-security-number
            helpMessageKey: household-member-info.if-they-have-one-we-strongly-recommend-including-it-here-your-caseworker-will
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          selectableOptions:
            - value: SNAP
              messageKey: choose-programs.food-snap
            - value: CASH
              messageKey: choose-programs.cash-programs
            - value: EA
              messageKey: choose-programs.emergency-assistance
            - value: CCAP
              messageKey: choose-programs.child-care-assistance
            - value: NONE
              messageKey: general.inputs.none-of-the-above
              isNone: true
  - &householdList
    name: householdList
    pageTitle: household-list.title
    primaryButtonTextKey: household-list.yes-thats-everyone
  - &noProgramsSelected
    name: noProgramsSelected
    pageTitle: no-programs-selected.title
    customPage: true
  - &childrenInNeedOfCare
    name: childrenInNeedOfCare
    pageTitle: children-in-need-of-care.title
    headerKey: children-in-need-of-care.who-are-the-children-in-need-of-childcare
    inputs:
      - type: CUSTOM
        name: whoNeedsChildCare
        customInputFragment: householdOptionsCheckboxes
        options:
          datasources:
            - pageName: personalInfo
            - groupName: household
              pageName: householdMemberInfo
  - &whoHasParentNotAtHome
    name: whoHasParentNotAtHome
    pageTitle: parent-not-at-home.title
    headerKey: parent-not-at-home.who-are-the-children-that-have-a-parent-not-living-at-home
    inputs:
      - type: PEOPLE_CHECKBOX
        name: whoHasAParentNotLivingAtHome
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-choose-none-of-the-above-or-another-option
        datasources:
          - pageName: childrenInNeedOfCare
            inputName: whoNeedsChildCare
  - &parentNotAtHomeNames
    name: parentNotAtHomeNames
    pageTitle: parent-not-at-home-names.title
    headerKey: parent-not-at-home-names.what-are-the-parents-names
    inputs:
      - type: CUSTOM
        name: whatAreTheParentsNames
        customInputFragment: parentNotAtHomeNameInput
        promptMessage:
          promptMessageKey: parent-not-at-home-names.what-is-the-parents-name
        options:
          datasources:
            - pageName: whoHasParentNotAtHome
      - type: HIDDEN
        name: childIdMap # This input is controlled by whatAreTheParentsNames
  - &householdDeleteWarningPage
    name: householdDeleteWarningPage
    pageTitle: warning-page.delete-household-member-warning
    primaryButtonTextKey: warning-page.nevermind-lets-keep-them
  - &introPersonalDetails
    name: introPersonalDetails
    pageTitle: intro-personal-details.title
    hasPrimaryButton: false
  - &preparingMealsTogether
    name: preparingMealsTogether
    pageTitle: preparing-meals-together.title
    headerKey: preparing-meals-together.header
    hasPrimaryButton: false
    inputs:
      - name: isPreparingMealsTogether
        type: YES_NO
  - &goingToSchool
    name: goingToSchool
    pageTitle: going-to-school.title
    headerKey:
      defaultValue: going-to-school.header-household
      conditionalValues:
        - value: going-to-school.header
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: goingToSchool
        type: YES_NO
  - &whoIsGoingToSchool
    name: whoIsGoingToSchool
    pageTitle: who-is-going-to-school.title
    headerKey: who-is-going-to-school.who-is-going-to-school
    inputs:
      - type: CUSTOM
        name: whoIsGoingToSchool
        customInputFragment: householdOptionsCheckboxes
        options:
          datasources:
            - pageName: personalInfo
            - groupName: household
  - &pregnant
    name: pregnant
    pageTitle: pregnant.title
    headerKey:
      defaultValue: pregnant.is-anyone-pregnant
      conditionalValues:
        - value: pregnant.are-you-pregnant
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: isPregnant
        type: YES_NO
  - &whoIsPregnant
    name: whoIsPregnant
    pageTitle: who-is-pregnant.title
    headerKey: who-is-pregnant.header
    headerHelpMessageKey: general.check-all-that-apply
    inputs:
      - type: CUSTOM
        name: whoIsPregnant
        customInputFragment: householdOptionsCheckboxes
        options:
          datasources:
            - pageName: personalInfo
            - groupName: household
  - &usCitizen
    name: usCitizen
    pageTitle: us-citizen.title
    headerKey:
      defaultValue: us-citizen.is-everyone-us-citizen
      conditionalValues:
        - value: us-citizen.are-you-a-us-citizen
          condition: *livesAlone?
    headerHelpMessageKey: us-citizen.most-immigrants-are-still-eligible-for-food-and-cash-benefits
    hasPrimaryButton: false
    inputs:
      - name: isUsCitizen
        type: YES_NO
  - &whoIsNonCitizen
    name: whoIsNonCitizen
    pageTitle: who-is-non-citizen.title
    headerKey: who-is-non-citizen.header
    headerHelpMessageKey: general.check-all-that-apply
    inputs:
      - type: CUSTOM
        name: whoIsNonCitizen
        customInputFragment: householdOptionsCheckboxes
        options:
          datasources:
            - pageName: personalInfo
            - groupName: household
  - &doYouNeedHelpImmediately
    name: doYouNeedHelpImmediately
    pageTitle: do-you-need-help-immediately.title
    hasPrimaryButton: false
  - &thirtyDayIncome
    headerKey:
      defaultValue: thirty-day-income.how-much-money-has-your-household-made-in-the-last-30-days
      conditionalValues:
        - value: thirty-day-income.how-much-money-have-you-made-in-the-last-30-days
          condition: *livesAloneOrIsApplicantsJob?
    headerHelpMessageKey: thirty-day-income.if-you-dont-know-the-exact-amount
    name: thirtyDayIncome
    pageTitle:
      defaultValue: thirty-day-income.title-household
      conditionalValues:
        - value: thirty-day-income.title-one-person
          condition: *livesAlone?
    inputs:
      - name: moneyMadeLast30Days
        type: MONEY
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: moneyMadeLast30Days
              matcher: NOT_EMPTY
  - &lastThirtyDaysJobIncome
    headerKey:
      conditionalValues:
        - value: thirty-day-job-income.how-much-money-have-you-made-at-this-job-in-the-last-30-days
          condition: *livesAloneOrIsApplicantsJob?
        - value: thirty-day-job-income.how-much-money-have-they-made-at-this-job-in-the-last-30-days
          condition:
            pageName: householdSelectionForIncome
            input: whoseJobIsIt
            value: "applicant"
            matcher: DOES_NOT_CONTAIN_SUBSTRING
    headerHelpMessageKey: thirty-day-income.if-you-dont-know-the-exact-amount
    name: lastThirtyDaysJobIncome
    pageTitle: thirty-day-job-income.title
    inputs:
      - name: lastThirtyDaysJobIncome
        type: MONEY
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: lastThirtyDaysJobIncome
              matcher: NOT_EMPTY
    contextFragment: jobContextFragment
  - &liquidAssets
    name: liquidAssets
    pageTitle:
      defaultValue: liquid-assets-prompt.title-household
      conditionalValues:
        - value: liquid-assets-prompt.title-one-person
          condition: *livesAlone?
    headerKey:
      defaultValue: thirty-day-income.how-much-money-is-available
      conditionalValues:
        - value: thirty-day-income.how-much-money-do-you-have-available
          condition: *livesAlone?
    inputs:
      - name: liquidAssets
        type: MONEY
        promptMessage:
          promptMessageFragmentName: liquidAssetsPrompt
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: liquidAssets
              matcher: NOT_EMPTY
  - &expeditedExpenses
    name: expeditedExpenses
    pageTitle:
      defaultValue: expedited-expenses.title-household
      conditionalValues:
        - value: expedited-expenses.title-one-person
          condition: *livesAlone?
    headerKey:
      defaultValue: expedited-expenses.header-household
      conditionalValues:
        - value: expedited-expenses.header-one-person
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: payRentOrMortgage
        type: YES_NO
  - &expeditedExpensesAmount
    name: homeExpensesAmount
    pageTitle:
      defaultValue: expedited-expenses-amount.title-household
      conditionalValues:
        - value: expedited-expenses-amount.title-one-person
          condition: *livesAlone?
    headerKey:
      defaultValue: expedited-expenses-amount.how-much-is-paid-for-rent-or-mortgage-every-month
      conditionalValues:
        - value: expedited-expenses-amount.how-much-do-you-pay-for-rent-or-mortgage-every-month
          condition: *livesAlone?
    inputs:
      - name: homeExpensesAmount
        type: MONEY
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: homeExpensesAmount
              matcher: NOT_EMPTY
  - &utilityPayments
    name: utilityPayments
    pageTitle:
      defaultValue: utility-payments.title-household
      conditionalValues:
        - value: utility-payments.title-one-person
          condition: *livesAlone?
    headerKey:
      defaultValue: utility-payments.does-anyone-in-your-household-pay-for-these-utilities
      conditionalValues:
        - value: utility-payments.do-you-pay-for-any-utilities
          condition: *livesAlone?
    headerHelpMessageKey:
      defaultValue: utility-payments.household-billed
      conditionalValues:
        - value: utility-payments.select-all-that-you-are-billed-for-even-if-you-havent-paid-it-this-month
          condition: *livesAlone?
    inputs:
      - name: payForUtilities
        type: CHECKBOX
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-choose-none-of-the-above-or-another-option
        options:
          selectableOptions:
            - value: HEATING
              messageKey: utility-payments.heating
            - value: COOLING
              messageKey: utility-payments.cooling
            - value: ELECTRICITY
              messageKey: utility-payments.electricity
            - value: PHONE
              messageKey: utility-payments.phone
            - value: WATER
              messageKey: utility-payments.water
            - value: SEWER
              messageKey: utility-payments.sewer
            - value: GARBAGE_REMOVAL
              messageKey: utility-payments.garbage-removal
            - value: COOKING_FUEL
              messageKey: utility-payments.cooking-fuel
            - value: NONE_OF_THE_ABOVE
              messageKey: general.inputs.none-of-the-above
              isNone: true
  - &energyAssistance
    name: energyAssistance
    pageTitle: energy-assistance.title
    headerKey:
      defaultValue: energy-assistance.household-received-money
      conditionalValues:
        - value: energy-assistance.have-you-received-money-for-energy-assistance
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: energyAssistance
        type: YES_NO
  - &energyAssistanceMoreThan20
    name: energyAssistanceMoreThan20
    pageTitle: energy-assistance-more-than-20.title
    headerKey:
      defaultValue: energy-assistance-more-than-20.household-received
      conditionalValues:
        - value: energy-assistance-more-than-20.have-you-received-more-than-20-in-energy-assistance
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: energyAssistanceMoreThan20
        type: YES_NO
  - &medicalExpenses
    name: medicalExpenses
    pageTitle: medical-expenses.title
    headerKey:
      defaultValue: medical-expenses.does-anyone-in-your-household-pay-for-medical-expenses
      conditionalValues:
        - value: medical-expenses.do-you-pay-for-medical-expenses
          condition: *livesAlone?
    headerHelpMessageKey: medical-expenses.let-us-know
    inputs:
      - name: medicalExpenses
        type: CHECKBOX
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-choose-none-of-the-above-or-another-option
        options:
          selectableOptions:
            - value: MEDICAL_INSURANCE_PREMIUMS
              messageKey: medical-expenses.medical-insurance-premiums
            - value: DENTAL_INSURANCE_PREMIUMS
              messageKey: medical-expenses.dental-insurance-premiums
            - value: VISION_INSURANCE_PREMIUMS
              messageKey: medical-expenses.vision-insurance-premiums
            - value: MEDICAL_BILLS_OR_COPAYS
              messageKey: medical-expenses.medical-bills-or-copays
            - value: NONE_OF_THE_ABOVE
              messageKey: general.inputs.none-of-the-above
              isNone: true
  - &medicalExpensesSources
    name: medicalExpensesSources
    pageTitle: medical-expenses-sources.title
    headerKey:
      defaultValue: medical-expenses-sources.tell-us-how-much-money-is-paid
    headerHelpMessageKey: medical-expenses-source.if-you-dont-have-all-this-information-by-hand-skip
    inputs:
      - name: medicalInsurancePremiumAmount
        type: MONEY
        promptMessage:
          promptMessageKey: medical-expenses-sources.medical-insurance-premiums
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: medicalInsurancePremiumAmount
              matcher: NOT_EMPTY
        condition:
          pageName: medicalExpenses
          input: medicalExpenses
          value: MEDICAL_INSURANCE_PREMIUMS
      - name: dentalInsurancePremiumAmount
        type: MONEY
        promptMessage:
          promptMessageKey: medical-expenses-sources.dental-insurance-premiums
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: dentalInsurancePremiumAmount
              matcher: NOT_EMPTY
        condition:
          pageName: medicalExpenses
          input: medicalExpenses
          value: DENTAL_INSURANCE_PREMIUMS
      - name: visionInsurancePremiumAmount
        type: MONEY
        promptMessage:
          promptMessageKey: medical-expenses-sources.vision-insurance-premiums
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: visionInsurancePremiumAmount
              matcher: NOT_EMPTY
        condition:
          pageName: medicalExpenses
          input: medicalExpenses
          value: VISION_INSURANCE_PREMIUMS
  - &supportAndCare
    name: supportAndCare
    pageTitle: support-and-care.title
    headerKey:
      defaultValue: support-and-care.household-support
      conditionalValues:
        - value: support-and-care.do-you-pay-for-court-ordered-child-support-spousal-support
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: supportAndCare
        type: YES_NO
  - &migrantFarmWorker
    name: migrantFarmWorker
    pageTitle:
      defaultValue: expedited-migrant-farm-worker.title-household
      conditionalValues:
        - value: expedited-migrant-farm-worker.title-one-person
          condition: *livesAlone?
    headerKey:
      defaultValue: expedited-migrant-farm-worker.header-household
      conditionalValues:
        - value: expedited-migrant-farm-worker.header-one-person
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: migrantOrSeasonalFarmWorker
        type: YES_NO
  - &snapExpeditedDetermination
    name: snapExpeditedDetermination
    customPage: true
  - &legalStuff
    name: legalStuff
    pageTitle: legal-stuff.title
    headerKey: legal-stuff.the-legal-stuff
    headerHelpMessageKey: legal-stuff.scroll-down-to-agree-to-the-terms
    inputs:
      - name: agreeToTerms
        type: CHECKBOX
        promptMessage:
          promptMessageFragmentName: legal-terms-prompt
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          selectableOptions:
            - value: "true"
              messageKey: legal-stuff.i-agree
      - name: drugFelony
        type: RADIO
        promptMessage:
          promptMessageKey: legal-stuff.has-anyone-been-convicted-of-drug-felony
        helpMessageKey: legal-stuff.if-yes-you-can-still-get-benefits
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          selectableOptions:
            - value: "true"
              messageKey: general.inputs.yes
            - value: "false"
              messageKey: general.inputs.no
  - &signThisApplication
    name: signThisApplication
    pageTitle: sign-this-application.title
    headerKey: sign-this-application.type-your-full-legal-name-here-to-sign-this-application
    headerHelpMessageKey: sign-this-application.by-signing-this-application-you-agree-that-you-want-to
    primaryButtonTextKey: sign-this-application.submit
    inputs:
      - name: applicantSignature
        type: TEXT
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
  - &addingDocuments
    name: addingDocuments
    pageTitle: adding-documents.title
    hasPrimaryButton: false
  - &howToAddDocuments
    name: howToAddDocuments
    pageTitle: how-to-add-documents.title
  - &documentRecommendation
    name: documentRecommendation
    pageTitle: document-recommendation.title
    customPage: true
  - &documentOffboarding
    name: documentOffboarding
    pageTitle: document-offboarding.title
    headerKey: document-offboarding.finish-your-application-and-add-documents-on-MNbenefits-later
    contextFragment: computerWithCheckContextFragment
    hasPrimaryButton: false
  - &uploadDocuments
    name: uploadDocuments
    pageTitle: upload-documents.title
    customPage: true
  - &uploadDocumentsDeleteWarningPage
    name: uploadDocumentsDeleteWarningPage
    headerKey: upload-documents-delete-warning.you-are-about-to-delete
    pageTitle: upload-documents-delete-warning.title
    customPage: true
  - &documentSubmitConfirmation
    name: documentSubmitConfirmation
    pageTitle: document-submit-confirmation.title
    headerKey: document-submit-confirmation.ready-to-submit-your-documents
    contextFragment: documentsSuccessContextFragment
    hasPrimaryButton: false
  - &identifyCounty
    name: identifyCounty
    headerKey: identify-county.select-your-county
    pageTitle: identify-county.title
    contextFragment: countyContextFragment
    inputs:
      - name: county
        type: SELECT
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-select-a-county
        options:
          selectableOptions:
            - value: ~
              messageKey: identify-county.select-your-county
            - value: Aitkin
              messageKey: identify-county-aitkin
            - value: Anoka
              messageKey: identify-county-anoka
            - value: Becker
              messageKey: identify-county-becker
            - value: Beltrami
              messageKey: identify-county-beltrami
            - value: Benton
              messageKey: identify-county-benton
            - value: BigStone
              messageKey: identify-county-big-stone
            - value: BlueEarth
              messageKey: identify-county-blue-earth
            - value: Brown
              messageKey: identify-county-brown
            - value: Carlton
              messageKey: identify-county-carlton
            - value: Carver
              messageKey: identify-county-carver
            - value: Cass
              messageKey: identify-county-cass
            - value: Chippewa
              messageKey: identify-county-chippewa
            - value: Chisago
              messageKey: identify-county-chisago
            - value: Clay
              messageKey: identify-county-clay
            - value: Clearwater
              messageKey: identify-county-clearwater
            - value: Cook
              messageKey: identify-county-cook
            - value: Cottonwood
              messageKey: identify-county-cottonwood
            - value: CrowWing
              messageKey: identify-county-crow-wing
            - value: Dakota
              messageKey: identify-county-dakota
            - value: Dodge
              messageKey: identify-county-dodge
            - value: Douglas
              messageKey: identify-county-douglas
            - value: Faribault
              messageKey: identify-county-faribault
            - value: Fillmore
              messageKey: identify-county-fillmore
            - value: Freeborn
              messageKey: identify-county-freeborn
            - value: Goodhue
              messageKey: identify-county-goodhue
            - value: Grant
              messageKey: identify-county-grant
            - value: Hennepin
              messageKey: identify-county-hennepin
            - value: Houston
              messageKey: identify-county-houston
            - value: Hubbard
              messageKey: identify-county-hubbard
            - value: Isanti
              messageKey: identify-county-isanti
            - value: Itasca
              messageKey: identify-county-itasca
            - value: Jackson
              messageKey: identify-county-jackson
            - value: Kanabec
              messageKey: identify-county-kanabec
            - value: Kandiyohi
              messageKey: identify-county-kandiyohi
            - value: Kittson
              messageKey: identify-county-kittson
            - value: Koochiching
              messageKey: identify-county-koochiching
            - value: LacQuiParle
              messageKey: identify-county-lac-qui-parle
            - value: Lake
              messageKey: identify-county-lake
            - value: LakeOfTheWoods
              messageKey: identify-county-lake-of-the-woods
            - value: LeSueur
              messageKey: identify-county-le-sueur
            - value: Lincoln
              messageKey: identify-county-lincoln
            - value: Lyon
              messageKey: identify-county-lyon
            - value: Mcleod
              messageKey: identify-county-mcleod
            - value: Mahnomen
              messageKey: identify-county-mahnomen
            - value: Marshall
              messageKey: identify-county-marshall
            - value: Meeker
              messageKey: identify-county-meeker
            - value: MartinLacs
              messageKey: identify-county-martin-lacs
            - value: Morrison
              messageKey: identify-county-morrison
            - value: Mower
              messageKey: identify-county-mower
            - value: Murray
              messageKey: identify-county-murray
            - value: Nicollet
              messageKey: identify-county-nicollet
            - value: Nobles
              messageKey: identify-county-nobles
            - value: Norman
              messageKey: identify-county-norman
            - value: Olmsted
              messageKey: identify-county-olmsted
            - value: OtterTail
              messageKey: identify-county-otter-tail
            - value: Pennington
              messageKey: identify-county-pennington
            - value: PineCounty
              messageKey: identify-county-pine
            - value: Pipestone
              messageKey: identify-county-pipestone
            - value: Polk
              messageKey: identify-county-polk
            - value: Pope
              messageKey: identify-county-pope
            - value: Ramsey
              messageKey: identify-county-ramsey
            - value: RedLake
              messageKey: identify-county-red-lake
            - value: Redwood
              messageKey: identify-county-redwood
            - value: Renville
              messageKey: identify-county-renville
            - value: Rice
              messageKey: identify-county-rice
            - value: Rock
              messageKey: identify-county-rock
            - value: Roseau
              messageKey: identify-county-roseau
            - value: StLouis
              messageKey: identify-county-saint-louis
            - value: Scott
              messageKey: identify-county-scott
            - value: Sherburne
              messageKey: identify-county-sherburne
            - value: Sibley
              messageKey: identify-county-sibley
            - value: Stearns
              messageKey: identify-county-stearns
            - value: Steele
              messageKey: identify-county-steele
            - value: Stevens
              messageKey: identify-county-stevens
            - value: Swift
              messageKey: identify-county-swift
            - value: Todd
              messageKey: identify-county-todd
            - value: Traverse
              messageKey: identify-county-traverse
            - value: Wabasha
              messageKey: identify-county-wabasha
            - value: Wadena
              messageKey: identify-county-wadena
            - value: Waseca
              messageKey: identify-county-waseca
            - value: Washington
              messageKey: identify-county-washington
            - value: Watonwan
              messageKey: identify-county-watonwan
            - value: Wilkin
              messageKey: identify-county-wilkin
            - value: Winona
              messageKey: identify-county-winona
            - value: Wright
              messageKey: identify-county-wright
            - value: YellowMedicine
              messageKey: identify-county-yellow-medicine
    subtleLinkTextKey: identify-county.enter-my-zip-code-instead
  - &identifyZipcode
    name: identifyZipcode
    headerKey: identify-zipcode.what-is-your-zip-code
    pageTitle: identify-zipcode.title
    contextFragment: countyContextFragment
    inputs:
      - name: zipCode
        type: TEXT
        validators:
          - validation: ZIPCODE
            errorMessageKey: general.validation.make-sure-to-enter-a-zip-code-with-5-digits
    subtleLinkTextKey: identify-zipcode.select-my-county-instead
  - &matchInfo
    name: matchInfo
    headerKey: match-info.match-docs-to-app
    headerHelpMessageKey: match-info.fill-in-as-much-as-you-can
    pageTitle: match-info.title
    contextFragment: matchInfoContextFragment
    inputs:
      - name: firstName
        type: TEXT
        promptMessage:
          promptMessageKey: match-info.whats-your-first-name
        helpMessageKey: match-info.legally-as-it-appears-on-your-id
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-first-name
      - name: lastName
        type: TEXT
        promptMessage:
          promptMessageKey: match-info.whats-your-last-name
        helpMessageKey: match-info.legally-as-it-appears-on-your-id
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-last-name
      - name: dateOfBirth
        type: DATE
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-dob
          - validation: DATE
            errorMessageKey: general.validation.please-enter-your-birthday-in-this-format
            condition:
              input: dateOfBirth
              matcher: NOT_EMPTY
          - validation: DOB_VALID
            condition:
              input: dateOfBirth
              matcher: NOT_EMPTY
            errorMessageKey: general.validation.make-sure-to-provide-a-dob-between-1900-and-present
        promptMessage:
          promptMessageKey: match-info.when-were-you-born
      - name: ssn
        type: SSN
        validators:
          - validation: SSN
            errorMessageKey: general.validation.make-sure-your-SSN-has-9-digits
            condition:
              input: ssn
              matcher: NOT_EMPTY
        promptMessage:
          promptMessageKey: match-info.whats-your-social-security-number
        helpMessageKey: match-info.recommended-but-not-required
      - name: phoneNumber
        type: PHONE
        promptMessage:
          promptMessageKey: contact-info.whats-your-phone-number
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-provide-a-phone-number
          - validation: PHONE_STARTS_WITH_ONE
            errorMessageKey: general.validation.area-codes-can-not-begin-with-1
            condition:
              input: phoneNumber
              matcher: NOT_EMPTY
          - validation: PHONE
            errorMessageKey: general.validation.make-sure-to-enter-a-phone-number-with-10-digits
            condition:
              input: phoneNumber
              matcher: NOT_EMPTY
        helpMessageKey: match-info.county-can-contact-you-if-questions
      - name: email
        type: TEXT
        validators:
          - validation: EMAIL
            errorMessageKey: general.validation.email
            condition:
              input: email
              matcher: NOT_EMPTY
        promptMessage:
          promptMessageKey: contact-info.whats-your-email-address
        helpMessageKey: match-info.county-can-contact-you-if-questions
      - name: caseNumber
        type: TEXT
        validators:
          - validation: CASE_NUMBER
            errorMessageKey: general.validation.make-sure-your-case-number-has-4-to-7-digits
            condition:
              input: caseNumber
              matcher: NOT_EMPTY
        promptMessage:
          promptMessageKey: match-info.case-number-if-you-have-it
        helpMessageKey: match-info.recommended-but-not-required
  - &emailDocsToYourCounty
    name: emailDocsToYourCounty
    pageTitle: email-docs-to-your-county.title
    contextFragment: email-docs-to-your-county-context-fragment
    headerKey: email-docs-to-your-county.header
    hasPrimaryButton: false
  - &nextSteps
    name: nextSteps
    pageTitle: next-steps.title
    hasPrimaryButton: false
  - &success
    name: success
    pageTitle: success.title
    customPage: true
  - &feedback
    name: feedback
    pageTitle: feedback.title
    customPage: true
  - &documentsSent
    name: documentsSent
    pageTitle: documentsSent.title
    contextFragment: icon-documents-sent
    headerKey: documentsSent.great-your-documents-are-being-sent
    hasPrimaryButton: false
  - &disability
    name: disability
    pageTitle: disability.title
    headerKey:
      defaultValue: disability.does-anyone-in-your-household-have-a-physical-or-mental-disability-that-prevents
      conditionalValues:
        - value: disability.do-you-have-a-physical-or-mental-disability-that-prevents-you-from-working
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: hasDisability
        type: YES_NO
  - &workSituation
    name: workSituation
    pageTitle: work-situation.title
    headerKey:
      defaultValue: work-situation.in-the-last-2-months-did-anyone-in-your-household-do-any-of-these-things
      conditionalValues:
        - value: work-situation.in-the-last-2-months-did-you-do-any-of-these-things
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: hasWorkSituation
        type: YES_NO
        promptMessage:
          promptMessageFragmentName: workSituationPrompt
  - &tribalNationMember
    name: tribalNationMember
    pageTitle: tribal-nation-member.title
    headerKey: tribal-nation-member.is-anyone-in-your-household-a-member-of-a-tribal-nation
    hasPrimaryButton: false
    inputs:
      - name: isTribalNationMember
        type: YES_NO
  - &nationsBoundary
    name: nationsBoundary
    pageTitle: nations-boundary.title
    headerKey: nations-boundary.are-any-of-the-tribal-members
    hasPrimaryButton: false
    inputs:
      - name: livingInNationBoundary
        type: YES_NO
  - &selectTheTribe
    name: selectTheTribe
    pageTitle: select-the-tribe.title
    headerKey: select-the-tribe.which-nation-do-they-belong-to
    hasPrimaryButton: true
    inputs:
      - name: selectedTribe
        type: SELECT
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-to-select-a-tribe
        options:
          selectableOptions:
            - value: ~
              messageKey: select-the-tribe.select-the-tribe
            - value: BoisForte
              messageKey: select-the-tribe.bois-forte
            - value: FondDuLac
              messageKey: select-the-tribe.fond-du-lac
            - value: GrandPortage
              messageKey: select-the-tribe.grand-portage
            - value: LeechLake
              messageKey: select-the-tribe.leech-lake
            - value: LowerSioux
              messageKey: select-the-tribe.lower-sioux
            - value: MilleLacs
              messageKey: select-the-tribe.mille-lacs
            - value: PrairieIsland
              messageKey: select-the-tribe.prairie-island
            - value: RedLake
              messageKey: select-the-tribe.red-lake
            - value: ShakopeeMdewakanton
              messageKey: select-the-tribe.shakopee-mdewakanton
            - value: UpperSioux
              messageKey: select-the-tribe.upper-sioux
            - value: WhiteEarth
              messageKey: select-the-tribe.white-earth
  - &introIncome
    name: introIncome
    pageTitle: intro-income.title
    hasPrimaryButton: false
  - &employmentStatus
    name: employmentStatus
    pageTitle: employment-status.title
    headerKey:
      defaultValue: employment-status.is-anyone-in-your-household-making-money-from-a-job
      conditionalValues:
        - value: employment-status.are-you-currently-working-or-making-an-income
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: areYouWorking
        type: YES_NO
  - &incomeByJob
    name: incomeByJob
    pageTitle: income-by-job.title
    headerKey:
      defaultValue: income-by-job.lets-add-all-the-jobs-in-your-household
      conditionalValues:
        - value: income-by-job.lets-add-your-job-information
          condition: *livesAlone?
    subtleLinkTextKey: income-by-job.id-rather-give-an-estimate
    hasPrimaryButton: false
  - &householdSelectionForIncome
    name: householdSelectionForIncome
    pageTitle: household-selection-for-income.title
    headerKey: household-selection-for-income.header
    inputs:
      - type: CUSTOM
        name: whoseJobIsIt
        customInputFragment: householdOptionsRadios
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          datasources:
            - pageName: personalInfo
            - groupName: household
  - &incomeUpNext
    name: incomeUpNext
    pageTitle: income-up-next.title
    hasPrimaryButton: false
  - &jobSearch
    name: jobSearch
    pageTitle: ccap-job-search.title
    headerKey:
      defaultValue: ccap-job-search.is-household-currently-looking-for-a-job
      conditionalValues:
        - value: ccap-job-search.are-you-currently-looking-for-a-job
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: currentlyLookingForJob
        type: YES_NO
  - &whoIsLookingForAJob
    name: whoIsLookingForAJob
    pageTitle: who-is-looking-for-job.title
    headerKey: who-is-looking-for-job.who-in-your-household-is-looking-for-a-job
    inputs:
      - type: CUSTOM
        name: whoIsLookingForAJob
        customInputFragment: householdOptionsCheckboxes
        options:
          datasources:
            - pageName: personalInfo
            - groupName: household
  - &unearnedIncome
    name: unearnedIncome
    pageTitle: unearned-income.title
    headerKey:
      defaultValue: unearned-income.household-get-income-from-any-of-these-sources
      conditionalValues:
        - value: unearned-income.do-you-get-income-from-any-of-these-sources
          condition: *livesAlone?
    headerHelpMessageKey: unearned-income.check-all-that-apply-you-do-not-need-to-report-income-you-havent-received-yet
    inputs:
      - name: unearnedIncome
        type: CHECKBOX
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-choose-none-of-the-above-or-another-option
        options:
          selectableOptions:
            - value: SOCIAL_SECURITY
              messageKey: unearned-income.social-security
            - value: SSI
              messageKey: unearned-income.ssi
            - value: VETERANS_BENEFITS
              messageKey: unearned-income.veterans-benefits
            - value: UNEMPLOYMENT
              messageKey: unearned-income.unemployment
            - value: WORKERS_COMPENSATION
              messageKey: unearned-income.workers-compensation
            - value: RETIREMENT
              messageKey: unearned-income.retirement
            - value: CHILD_OR_SPOUSAL_SUPPORT
              messageKey: unearned-income.child-or-spousal-support
            - value: TRIBAL_PAYMENTS
              messageKey: unearned-income.tribal-payments
            - value: NO_UNEARNED_INCOME_SELECTED
              messageKey: general.inputs.none-of-the-above
              isNone: true
  - &unearnedIncomeSources
    name: unearnedIncomeSources
    pageTitle: unearned-income-sources.title
    headerKey:
      defaultValue: unearned-income-sources.tell-us-how-much-money-is-received
      conditionalValues:
        - value: unearned-income-sources.tell-us-how-much-money-you-receive
          condition: *livesAlone?
    headerHelpMessageKey: unearned-income-sources.if-you-dont-have-all-this-information-on-hand-skip
    inputs:
      - name: socialSecurityAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.social-security
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: socialSecurityAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: SOCIAL_SECURITY
      - name: supplementalSecurityIncomeAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.ssi
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: supplementalSecurityIncomeAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: SSI
      - name: veteransBenefitsAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.veterans-benefits
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: veteransBenefitsAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: VETERANS_BENEFITS
      - name: unemploymentAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.unemployment
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: unemploymentAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: UNEMPLOYMENT
      - name: workersCompensationAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.workers-compensation
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: workersCompensationAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: WORKERS_COMPENSATION
      - name: retirementAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.retirement
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: retirementAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: RETIREMENT
      - name: childOrSpousalSupportAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.child-or-spousal-support
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: childOrSpousalSupportAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: CHILD_OR_SPOUSAL_SUPPORT
      - name: tribalPaymentsAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income.tribal-payments
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: tribalPaymentsAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncome
          input: unearnedIncome
          value: TRIBAL_PAYMENTS
  - &unearnedIncomeCcap
    name: unearnedIncomeCcap
    pageTitle: unearned-income.title
    headerKey:
      defaultValue: unearned-income-ccap.household-get-income-from-any-of-these-sources
      conditionalValues:
        - value: unearned-income-ccap.do-you-get-income-from-any-of-these-sources
          condition: *livesAlone?
    headerHelpMessageKey: unearned-income.check-all-that-apply-you-do-not-need-to-report-income-you-havent-received-yet
    inputs:
      - name: unearnedIncomeCcap
        type: CHECKBOX
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-choose-none-of-the-above-or-another-option
        options:
          selectableOptions:
            - value: BENEFITS
              messageKey: unearned-income-ccap.benefits-programs
            - value: INSURANCE_PAYMENTS
              messageKey: unearned-income-ccap.insurance-payments
            - value: CONTRACT_FOR_DEED
              messageKey: unearned-income-ccap.contract-for-deed
            - value: TRUST_MONEY
              messageKey: unearned-income-ccap.money-from-a-trust
            - value: HEALTH_CARE_REIMBURSEMENT
              messageKey: unearned-income-ccap.health-care-reimbursement
            - value: INTEREST_DIVIDENDS
              messageKey: unearned-income-ccap.interest-dividends
            - value: OTHER_SOURCES
              messageKey: unearned-income-ccap.other-sources
            - value: NO_UNEARNED_INCOME_CCAP_SELECTED
              messageKey: general.inputs.none-of-the-above
              isNone: true
  - &unearnedIncomeSourcesCcap
    name: unearnedIncomeSourcesCcap
    pageTitle: unearned-income-sources.title
    headerKey:
      defaultValue: unearned-income-sources.tell-us-how-much-money-is-received
      conditionalValues:
        - value: unearned-income-sources.tell-us-how-much-money-you-receive
          condition: *livesAlone?
    headerHelpMessageKey: unearned-income-sources.if-you-dont-have-all-this-information-on-hand-skip
    inputs:
      - name: benefitsAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.benefits-programs
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: benefitsAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: BENEFITS
      - name: insurancePaymentsAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.insurance-payments
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: insurancePaymentsAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: INSURANCE_PAYMENTS
      - name: contractForDeedAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.contract-for-deed
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: contractForDeedAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: CONTRACT_FOR_DEED
      - name: trustMoneyAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.money-from-a-trust
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: trustMoneyAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: TRUST_MONEY
      - name: healthCareReimbursementAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.health-care-reimbursement
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: healthCareReimbursementAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: HEALTH_CARE_REIMBURSEMENT
      - name: interestDividendsAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.interest-dividends
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: interestDividendsAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: INTEREST_DIVIDENDS
      - name: otherSourcesAmount
        type: MONEY
        promptMessage:
          promptMessageKey: unearned-income-ccap.other-sources
        helpMessageKey: general.monthly-amount
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: otherSourcesAmount
              matcher: NOT_EMPTY
        condition:
          pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: OTHER_SOURCES
  - &livingSituation
    name: livingSituation
    pageTitle: living-situation.title
    headerKey: living-situation.what-is-your-current-living-situation
    inputs:
      - name: livingSituation
        type: RADIO
        options:
          selectableOptions:
            - value: PAYING_FOR_HOUSING_WITH_RENT_LEASE_OR_MORTGAGE
              messageKey: living-situation.paying-for-my-own-housing-with-rent-lease-or-mortgage-payments
            - value: LIVING_IN_A_PLACE_NOT_MEANT_FOR_HOUSING
              messageKey: living-situation.living-outside-in-a-vehicle-or-another-place-not-meant-for-housing
            - value: TEMPORARILY_WITH_FRIENDS_OR_FAMILY_DUE_TO_ECONOMIC_HARDSHIP
              messageKey: living-situation.temporarily-staying-with-friends-or-family-due-to-economic-hardship
            - value: TEMPORARILY_WITH_FRIENDS_OR_FAMILY_OTHER_REASONS
              messageKey: living-situation.temporarily-staying-with-friends-or-family-for-other-reasons
            - value: HOTEL_OR_MOTEL
              messageKey: living-situation.staying-in-a-hotel-or-motel
            - value: EMERGENCY_SHELTER
              messageKey: living-situation.staying-in-an-emergency-shelter
            - value: FOSTER_CARE_OR_GROUP_HOME
              messageKey: living-situation.living-in-foster-care-or-a-group-home
            - value: HOSPITAL_OR_OTHER_TREATMENT_FACILITY
              messageKey: living-situation.staying-in-a-hospital-treatment-facility-detox-center-or-nursing-home
            - value: JAIL_OR_JUVENILE_DETENTION_FACILITY
              messageKey: living-situation.in-jail-prison-or-juvenile-detention
            - value: UNKNOWN
              messageKey: living-situation.none-of-these
            - value: PREFER_NOT_TO_SAY
              messageKey: living-situation.i-prefer-not-to-say
  - &futureIncome
    name: futureIncome
    pageTitle: future-income.title
    headerKey:
      defaultValue: future-income.do-you-think-household-will-earn-less-money-this-month-than-last-month
      conditionalValues:
        - value: future-income.do-you-think-youll-earn-less-money-this-month-than-last-month
          condition: *livesAlone?
    headerHelpMessageKey: future-income.if-youre-not-sure-you-can-guess
    inputs:
      - name: earnLessMoneyThisMonth
        type: RADIO
        options:
          selectableOptions:
            - value: "true"
              messageKey: general.inputs.yes
            - value: "false"
              messageKey: general.inputs.no
      - name: additionalIncomeInfo
        type: TEXTAREA
        promptMessage:
          promptMessageKey: future-income.is-there-anything-else-youd-like-to-share-about-your-income
        helpMessageKey: general.inputs.optional
  - &employersName
    name: employersName
    pageTitle: employers-name.title
    headerKey:
      defaultValue: employers-name.add-a-job-they-have
      conditionalValues:
        - value: employers-name.add-a-job-you-have
          condition: *livesAloneOrIsApplicantsJob?
    inputs:
      - name: employersName
        type: LONG_TEXT
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        promptMessage:
          promptMessageKey: employers-name.what-is-the-employers-name
  - &selfEmployment
    name: selfEmployment
    pageTitle: self-employment.title
    headerKey:
      defaultValue: self-employment.is-their-work-here
      conditionalValues:
        - value: self-employment.is-your-work-here
          condition: *livesAloneOrIsApplicantsJob?
    hasPrimaryButton: false
    inputs:
      - name: selfEmployment
        promptMessage:
          promptMessageFragmentName: selfEmploymentPrompt
        type: YES_NO
    contextFragment: jobContextFragment
  - &paidByTheHour
    name: paidByTheHour
    pageTitle: paid-by-the-hour.title
    headerKey:
      defaultValue: paid-by-the-hour.do-they-get-paid-by-the-hour
      conditionalValues:
        - value: paid-by-the-hour.do-you-get-paid-by-the-hour
          condition: *livesAloneOrIsApplicantsJob?
    hasPrimaryButton: false
    inputs:
      - name: paidByTheHour
        type: YES_NO
    subtleLinkTextKey: paid-by-the-hour.i-dont-know-these-details
    contextFragment: jobContextFragment
  - &hourlyWage
    name: hourlyWage
    pageTitle: hourly-wage.title
    headerKey:
      defaultValue: hourly-wage.what-is-their-hourly-wage
      conditionalValues:
        - value: hourly-wage.what-is-your-hourly-wage
          condition: *livesAloneOrIsApplicantsJob?
    inputs:
      - name: hourlyWage
        type: HOURLY_WAGE
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
            condition:
              input: hourlyWage
              matcher: NOT_EMPTY
    contextFragment: jobContextFragment
  - &hoursAWeek
    name: hoursAWeek
    pageTitle: hours-a-week.title
    headerKey:
      defaultValue: hours-a-week.how-many-hours-a-week-do-they-work
      conditionalValues:
        - value: hours-a-week.how-many-hours-a-week-do-you-work
          condition: *livesAloneOrIsApplicantsJob?
    headerHelpMessageKey:
      defaultValue: hours-a-week.we-know-this-can-be-hard-to-answer-so-just-estimate-based-on-their
      conditionalValues:
        - value: hours-a-week.we-know-this-can-be-hard-to-answer-so-just-estimate-based-on
          condition: *livesAloneOrIsApplicantsJob?
    inputs:
      - name: hoursAWeek
        type: NUMBER
        validators:
          - validation: NUMBER
            errorMessageKey: general.validation.make-sure-you-enter-a-number
    contextFragment: jobContextFragment
  - &payPeriod
    name: payPeriod
    pageTitle: pay-period.title
    headerKey:
      defaultValue: pay-period.how-often-do-they-get-paid
      conditionalValues:
        - value: pay-period.how-often-do-you-get-paid
          condition: *livesAloneOrIsApplicantsJob?
    inputs:
      - name: payPeriod
        type: RADIO
        validators:
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-answer-this-question
        options:
          selectableOptions:
            - value: EVERY_WEEK
              messageKey: pay-period.every-week
            - value: EVERY_TWO_WEEKS
              messageKey: pay-period.every-two-weeks
            - value: TWICE_A_MONTH
              messageKey: pay-period.twice-a-month
            - value: EVERY_MONTH
              messageKey: pay-period.every-month
            - value: IT_VARIES
              messageKey: pay-period.it-varies
    contextFragment: jobContextFragment
  - &incomePerPayPeriod
    name: incomePerPayPeriod
    pageTitle: income-per-pay-period.title
    headerKey:
      conditionalValues:
        - value: income-per-pay-period.every-week
          condition:
            pageName: payPeriod
            input: payPeriod
            value: EVERY_WEEK
        - value: income-per-pay-period.every-two-weeks
          condition:
            pageName: payPeriod
            input: payPeriod
            value: EVERY_TWO_WEEKS
        - value: income-per-pay-period.twice-a-month
          condition:
            pageName: payPeriod
            input: payPeriod
            value: TWICE_A_MONTH
        - value: income-per-pay-period.every-month
          condition:
            pageName: payPeriod
            input: payPeriod
            value: EVERY_MONTH
        - value: income-per-pay-period.it-varies
          condition:
            pageName: payPeriod
            input: payPeriod
            value: IT_VARIES
    headerHelpMessageKey: income-per-pay-period.provide-income-before-taxes-we-know-this-can-be-hard-to
    inputs:
      - name: incomePerPayPeriod
        type: MONEY
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
    contextFragment: jobContextFragment
  - &jobBuilder
    name: jobBuilder
    pageTitle: job-builder.title
    headerKey:
      defaultValue: job-builder.your-household-jobs
      conditionalValues:
        - value: job-builder.your-jobs
          condition: *livesAlone?
    customPage: true
  - &jobRedirectPage
    name: jobRedirectPage
    headerKey: warning-page.going-back-will-take-you-to-the-beginning-of-the-jobs-section-where-you-will-start-over
    pageTitle: warning-page.go-back-title
    customPage: true
  - &jobDeleteWarningPage
    name: jobDeleteWarningPage
    headerKey:
      conditionalValues:
        - value: warning-page.you-are-about-to-delete-your-job
          condition: *livesAloneOrIsApplicantsJob?
        - value: warning-page.you-are-about-to-delete-member-job
          condition:
            pageName: householdSelectionForIncome
            input: whoseJobIsIt
            value: "applicant"
            matcher: DOES_NOT_CONTAIN_SUBSTRING
    pageTitle: warning-page.no-data-title
    customPage: true
  - &startExpenses
    name: startExpenses
    pageTitle: start-expenses.title
    hasPrimaryButton: false
  - &homeExpenses
    name: homeExpenses
    pageTitle: home-expenses.title
    headerKey:
      defaultValue: home-expenses.household-pay-for-these
      conditionalValues:
        - value: home-expenses.do-you-pay-for-any-of-these
          condition: *livesAlone?
    headerHelpMessageKey: general.check-all-that-apply
    inputs:
      - name: homeExpenses
        type: CHECKBOX
        validators:
          - validation: SELECT_AT_LEAST_ONE
            errorMessageKey: general.validation.make-sure-you-choose-none-of-the-above-or-another-option
        options:
          selectableOptions:
            - value: RENT
              messageKey: home-expenses.rent
            - value: MORTGAGE
              messageKey: home-expenses.mortgage
            - value: HOMEOWNERS_INSURANCE
              messageKey: home-expenses.homeowners-insurance
            - value: REAL_ESTATE_TAXES
              messageKey: home-expenses.real-estate-taxes
            - value: ASSOCIATION_FEES
              messageKey: home-expenses.association-fees
            - value: ROOM_AND_BOARD
              messageKey: home-expenses.room-and-board
            - value: NONE_OF_THE_ABOVE
              messageKey: general.inputs.none-of-the-above
              isNone: true
  - &homeExpensesAmount
    name: homeExpensesAmount
    pageTitle: home-expenses-amount.title
    headerKey:
      conditionalValues:
        - value: home-expenses-amount.how-much-do-you-pay-for-rent-mortgage-and-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *livesAlone?
              - *hasMortgage?
              - *hasRent?
              - *hasRoomAndBoard?
        - value: home-expenses-amount.how-much-do-you-pay-for-rent-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveMortgage?
              - *doesNotHaveRoomAndBoard?
              - *livesAlone?
        - value: home-expenses-amount.how-much-do-you-pay-for-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveMortgage?
              - *doesNotHaveRent?
              - *livesAlone?
        - value: home-expenses-amount.how-much-do-you-pay-for-rent-and-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveMortgage?
              - *livesAlone?
        - value: home-expenses-amount.how-much-do-you-pay-for-mortgage-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveRent?
              - *doesNotHaveRoomAndBoard?
              - *livesAlone?
        - value: home-expenses-amount.how-much-do-you-pay-for-mortgage-and-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveRent?
              - *livesAlone?
        - value: home-expenses-amount.how-much-do-you-pay-for-rent-and-mortgage-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *livesAlone?
              - *hasRent?
              - *hasMortgage?
        # This condition needs to come first among the household conditions in order to get evaluated correctly
        - value: home-expenses-amount.household-pay-for-rent-mortgage-and-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotLiveAlone?
              - *hasRoomAndBoard?
              - *hasRent?
              - *hasMortgage?
        - value: home-expenses-amount.household-pay-rent-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveMortgage?
              - *doesNotHaveRoomAndBoard?
              - *doesNotLiveAlone?
        - value: home-expenses-amount.household-pay-for-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveMortgage?
              - *doesNotHaveRent?
              - *doesNotLiveAlone?
        - value: home-expenses-amount.household-pay-mortgage-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotHaveRent?
              - *doesNotHaveRoomAndBoard?
              - *doesNotLiveAlone?
        - value: home-expenses-amount.how-much-does-household-pay-for-rent-and-mortgage-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotLiveAlone?
              - *hasRent?
              - *hasMortgage?
        - value: home-expenses-amount.household-pay-for-mortgage-and-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotLiveAlone?
              - *hasRoomAndBoard?
              - *hasMortgage?
        - value: home-expenses-amount.household-pay-for-rent-and-room-and-board-every-month
          condition:
            logicalOperator: AND
            conditions:
              - *doesNotLiveAlone?
              - *hasRoomAndBoard?
              - *hasRent?
    inputs:
      - name: homeExpensesAmount
        type: MONEY
        validators:
          - validation: MONEY
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
          - validation: NOT_BLANK
            errorMessageKey: general.validation.make-sure-you-enter-a-dollar-amount
  - &savings
    name: savings
    pageTitle: savings.title
    headerKey:
      defaultValue: savings.household-bank-account
      conditionalValues:
        - value: savings.do-you-have-money-in-a-bank-account-or-debit-card
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: haveSavings
        type: YES_NO
  - &investments
    name: investments
    pageTitle: investments.title
    headerKey:
      defaultValue: investments.household-stocks
      conditionalValues:
        - value: investments.do-you-have-any-stocks-bonds-or-a-401k
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: haveInvestments
        type: YES_NO
  - &vehicle
    name: vehicle
    pageTitle: vehicle.title
    headerKey:
      defaultValue: vehicle.household-own-vehicle
      conditionalValues:
        - value: vehicle.do-you-own-a-vehicle
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: haveVehicle
        type: YES_NO
  - &realEstate
    name: realEstate
    pageTitle: real-estate.title
    headerKey:
      defaultValue: real-estate.household-own-real-estate
      conditionalValues:
        - value: real-estate.do-you-own-any-real-estate
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: ownRealEstate
        type: YES_NO
  - &millionDollar
    name: millionDollar
    pageTitle: million-dollar.title
    headerKey: million-dollar.does-your-family-have-more-than-1-million
    headerHelpMessageKey: million-dollar.do-not-include
    hasPrimaryButton: false
    inputs:
      - name: haveMillionDollars
        type: YES_NO
  - &soldAssets
    name: soldAssets
    pageTitle: sold-assets.title
    headerKey:
      defaultValue: sold-assets.households-given-or-sold
      conditionalValues:
        - value: sold-assets.in-the-last-12-months-have-you-given-away-or-sold-any-assets
          condition: *livesAlone?
    hasPrimaryButton: false
    inputs:
      - name: haveSoldAssets
        type: YES_NO
        promptMessage:
          promptMessageFragmentName: soldAssetsPrompt
  - &submittingApplication
    name: submittingApplication
    pageTitle: submitting-application.title
    hasPrimaryButton: false
  - &homeAddressValidation
    name: homeAddressValidation
    pageTitle: address-validation.title
    hasPrimaryButton: false
    inputs:
      - name: useEnrichedAddress
        type: CUSTOM
        customInputFragment: addressValidationInput
        options:
          selectableOptions:
            - value: "true"
              messageKey: address-validation.suggested-address
            - value: "false"
              messageKey: address-validation.address-you-entered
  - &mailingAddressValidation
    name: mailingAddressValidation
    pageTitle: address-validation.title
    hasPrimaryButton: false
    inputs:
      - name: useEnrichedAddress
        type: CUSTOM
        customInputFragment: addressValidationInput
        options:
          selectableOptions:
            - value: "true"
              messageKey: address-validation.suggested-address
            - value: "false"
              messageKey: address-validation.address-you-entered
  - &registerToVote
    name: registerToVote
    headerKey: register-to-vote.do-you-want-to-register-to-vote
    inputs:
      - name: registerToVote
        type: CUSTOM
        customInputFragment: registerToVoteInput
        options:
          selectableOptions:
            - value: "YES"
              messageKey: register-to-vote.yes-send-me-more-info
            - value: NO_ALREADY_REGISTERED
              messageKey: register-to-vote.ive-already-registered
            - value: "NO"
              messageKey: register-to-vote.no-thanks
    pageTitle: register-to-vote.title
    hasPrimaryButton: false
  - &healthcareCoverage
    name: healthcareCoverage
    headerKey: healthcareCoverage.do-you-currently-have-healthcare-coverage
    contextFragment: healthcareCoverageFragment
    inputs:
      - name: healthcareCoverage
        type: RADIO
        options:
          selectableOptions:
            - value: "YES"
              messageKey: general.inputs.yes
            - value: "NO"
              messageKey: general.inputs.no
            - value: "NOT_SURE"
              messageKey: general.inputs.not-sure
    pageTitle: healthcareCoverage.title
  - &helper
    name: helper
    headerKey: helper.do-you-want-to-designate-someone-to-help-with-your-benefits
    inputs:
      - name: helpWithBenefits
        type: YES_NO
    pageTitle: helper.title
    hasPrimaryButton: false
  - &authorizedRep
    name: authorizedRep
    headerKey: authorized-rep.do-you-want-your-helper-to-communicate-with-the-county-on-your-behalf
    inputs:
      - name: communicateOnYourBehalf
        type: YES_NO
        promptMessage:
          promptMessageFragmentName: authorizedRepPrompt
    pageTitle: authorized-rep.title
    hasPrimaryButton: false
  - &speakToCounty
    name: speakToCounty
    headerKey: speak-to-county.do-you-want-your-helper-to-get-mail-and-notices-for-you
    inputs:
      - name: getMailNotices
        type: YES_NO
        promptMessage:
          promptMessageFragmentName: getMailNoticesPrompt
    pageTitle: speak-to-county.title
    hasPrimaryButton: false
  - &spendOnYourBehalf
    name: spendOnYourBehalf
    headerKey: spend-on-your-behalf.do-you-want-your-helper-to-spend-your-benefits-on-your-behalf
    inputs:
      - name: spendOnYourBehalf
        type: YES_NO
        promptMessage:
          promptMessageFragmentName: spendOnYourBehalfPrompt
    pageTitle: spend-on-your-behalf.title
    hasPrimaryButton: false
  - &helperContactInfo
    name: helperContactInfo
    pageTitle: helper-contact-info.title
    headerKey: helper-contact-info.lets-get-your-helpers-contact-information
    headerHelpMessageKey: helper-contact-info.we-need-to-send-this-information-to-your-county
    inputs:
      - name: helpersFullName
        type: TEXT
        promptMessage:
          promptMessageKey: helper-contact-info.whats-their-name
      - name: helpersStreetAddress
        type: TEXT
        promptMessage:
          promptMessageKey: helper-contact-info.whats-their-street-address
      - name: helpersCity
        type: TEXT
        promptMessage:
          promptMessageKey: helper-contact-info.what-city-do-they-live-in
      - name: helpersZipCode
        type: TEXT
        promptMessage:
          promptMessageKey: helper-contact-info.what-is-their-zip-code
      - name: helpersPhoneNumber
        type: PHONE
        promptMessage:
          promptMessageKey: helper-contact-info.what-is-their-phone-number
        validators:
          - validation: PHONE_STARTS_WITH_ONE
            errorMessageKey: general.validation.area-codes-can-not-begin-with-1
          - validation: PHONE
            errorMessageKey: general.validation.make-sure-to-enter-a-phone-number-with-10-digits
  - &additionalInfo
    name: additionalInfo
    headerKey: additional-info.is-there-anything-else-you-want-to-share
    headerHelpMessageKey: additional-info.this-is-optional
    inputs:
      - name: additionalInfo
        type: TEXTAREA
      - name: caseNumber
        type: TEXT
        placeholder: general.optional
        validators:
          - validation: CASE_NUMBER
            errorMessageKey: general.validation.make-sure-your-case-number-has-4-to-7-digits
            condition:
              input: caseNumber
              matcher: NOT_EMPTY
        promptMessage:
          promptMessageKey: additional-info.whats-your-case-number
        helpMessageKey: additional-info.case-number-is-optional
      - name: caseNumberImages
        type: CUSTOM
        customInputFragment: caseNumberImages
    pageTitle: additional-info.title
workflow:
  landing:
    pageConfiguration: *landing
    nextPages:
      - pageName: prepareToApply
  prepareToApply:
    pageConfiguration: *prepareToApply
    nextPages:
      - pageName: addingDocsIsEasy
  addingDocsIsEasy:
    pageConfiguration: *addingDocsIsEasy
    nextPages:
      - pageName: languagePreferences
  languagePreferences:
    pageConfiguration: *languagePreferences
    nextPages:
      - pageName: choosePrograms
  choosePrograms:
    pageConfiguration: *choosePrograms
    nextPages:
      - pageName: introBasicInfo
  introBasicInfo:
    pageConfiguration: *introBasicInfo
    nextPages:
      - pageName: personalInfo
  personalInfo:
    pageConfiguration: *personalInfo
    enrichment: personalInfoDateOfBirthEnrichment
    nextPages:
      - pageName: contactInfo
  contactInfo:
    pageConfiguration: *contactInfo
    nextPages:
      - pageName: homeAddress2
        flag: apply-without-address
      - pageName: homeAddress
  homeAddress2:
    pageConfiguration: *homeAddress2
    enrichment: homeAddressEnrichment
    nextPages:
      - pageName: whereToSendMail
        condition:
          pageName: homeAddress
          input: isHomeless
          value: "true"
      - pageName: mailingAddress2
  whereToSendMail:
    pageConfiguration: *whereToSendMail
    subtleLinkTargetPage: cityForGeneralDelivery
    nextPages:
      - pageName: mailingAddress2
      - pageName: cityForGeneralDelivery
  cityForGeneralDelivery:
    pageConfiguration: *cityForGeneralDelivery
    enrichment: generalDeliveryAddressEnrichment
    nextPages:
      - pageName: generalDeliveryAddress
  generalDeliveryAddress:
    pageConfiguration: *generalDeliveryAddress
    nextPages:
      - pageName: reviewInfo
    datasources:
      - pageName: cityForGeneralDelivery
  mailingAddress2:
    pageConfiguration: *mailingAddress2
    enrichment: mailingAddressEnrichment
    nextPages:
      - pageName: verifyHomeAddress2
    datasources:
      - pageName: homeAddress
      - pageName: mailingAddress
  verifyHomeAddress2:
    pageConfiguration: *homeAddressValidation
    skipCondition:
      logicalOperator: OR
      conditions:
        - <<: *isHomeless?
          matcher: CONTAINS
        - pageName: mailingAddress
          input: sameMailingAddress
          matcher: DOES_NOT_CONTAIN
          value: "true"
    datasources:
      - pageName: homeAddress
      - pageName: mailingAddress
    nextPages:
      - pageName: verifyMailingAddress2
      - pageName: homeAddress2
  verifyMailingAddress2:
    pageConfiguration: *mailingAddressValidation
    skipCondition:
      pageName: mailingAddress
      input: sameMailingAddress
      matcher: CONTAINS
      value: "true"
    datasources:
      - pageName: mailingAddress
      - pageName: homeAddress
    nextPages:
      - pageName: reviewInfo
      - pageName: mailingAddress2
  homeAddress:
    pageConfiguration: *homeAddress
    enrichment: homeAddressEnrichment
    nextPages:
      - pageName: verifyHomeAddress
  verifyHomeAddress:
    pageConfiguration: *homeAddressValidation
    skipCondition:
      pageName: homeAddress
      input: streetAddress
      matcher: EMPTY
    datasources:
      - pageName: homeAddress
    nextPages:
      - pageName: mailingAddress
      - pageName: homeAddress
  mailingAddress:
    pageConfiguration: *mailingAddress
    enrichment: mailingAddressEnrichment
    skipCondition:
      pageName: homeAddress
      input: sameMailingAddress
      value: "true"
    nextPages:
      - pageName: verifyMailingAddress
    datasources:
      - pageName: homeAddress
  verifyMailingAddress:
    pageConfiguration: *mailingAddressValidation
    skipCondition:
      pageName: homeAddress
      input: sameMailingAddress
      value: "true"
    datasources:
      - pageName: mailingAddress
      - pageName: homeAddress
    nextPages:
      - pageName: reviewInfo
      - pageName: mailingAddress
  reviewInfo:
    subtleLinkTargetPage: doYouNeedHelpImmediately
    pageConfiguration: *reviewInfo
    nextPages:
      - pageName: startHousehold
        flow: FULL
        condition: *onlyApplyingForOthers?
      - pageName: addHouseholdMembers
        flow: FULL
    datasources:
      - pageName: personalInfo
      - pageName: homeAddress
      - pageName: homeAddressValidation
      - pageName: mailingAddress
      - pageName: mailingAddressValidation
      - pageName: cityForGeneralDelivery
      - pageName: contactInfo
      - pageName: choosePrograms
  addHouseholdMembers:
    pageConfiguration: *addHouseholdMembers
    nextPages:
      - pageName: startHousehold
        condition: *onlyApplyingForOthers?
      - pageName: introPersonalDetails
        condition:
          pageName: addHouseholdMembers
          input: addHouseholdMembers
          value: "false"
      - pageName: startHousehold
        condition:
          pageName: addHouseholdMembers
          input: addHouseholdMembers
          value: "true"
    skipCondition: *onlyApplyingForOthers?
    datasources:
      - pageName: choosePrograms
  startHousehold:
    pageConfiguration: *startHousehold
    nextPages:
      - pageName: householdMemberInfo
  householdMemberInfo:
    pageConfiguration: *householdMemberInfo
    groupName: household
    nextPages:
      - pageName: householdList
  householdList:
    pageConfiguration: *householdList
    dataMissingRedirect: reviewInfo
    nextPages:
      - pageName: noProgramsSelected
      - pageName: householdMemberInfo
    datasources:
      - groupName: household
      - pageName: personalInfo
  noProgramsSelected:
    pageConfiguration: *noProgramsSelected
    nextPages:
      - pageName: childrenInNeedOfCare
    skipCondition:
      logicalOperator: OR
      conditions:
        - *applicantChoseAtLeastOneProgram?
        - *householdMemberChoseAtLeastOneProgram?
    datasources:
      - groupName: household
        pageName: householdMemberInfo
      - pageName: choosePrograms
  childrenInNeedOfCare:
    pageConfiguration: *childrenInNeedOfCare
    nextPages:
      - pageName: whoHasParentNotAtHome
    datasources:
      - pageName: choosePrograms
      - groupName: household
        pageName: householdMemberInfo
    skipCondition: *noOneChoseCCAP?
  whoHasParentNotAtHome:
    pageConfiguration: *whoHasParentNotAtHome
    nextPages:
      - pageName: parentNotAtHomeNames
    datasources:
      - pageName: childrenInNeedOfCare
      - pageName: choosePrograms
      - groupName: household
        pageName: householdMemberInfo
    skipCondition:
      logicalOperator: OR
      conditions:
        - *noOneChoseCCAP?
        - pageName: childrenInNeedOfCare
          input: whoNeedsChildCare
          matcher: NONE_SELECTED
  parentNotAtHomeNames:
    pageConfiguration: *parentNotAtHomeNames
    nextPages:
      - pageName: preparingMealsTogether
    datasources:
      - pageName: choosePrograms
      - groupName: household
        pageName: householdMemberInfo
      - pageName: childrenInNeedOfCare
      - pageName: whoHasParentNotAtHome
    skipCondition:
      logicalOperator: OR
      conditions:
        - *noOneChoseCCAP?
        - pageName: childrenInNeedOfCare
          input: whoNeedsChildCare
          matcher: NONE_SELECTED
        - pageName: whoHasParentNotAtHome
          input: whoHasAParentNotLivingAtHome
          value: NONE_OF_THE_ABOVE
  householdDeleteWarningPage:
    pageConfiguration: *householdDeleteWarningPage
    appliesToGroup: household
    dataMissingRedirect: reviewInfo
    nextPages:
      - pageName: householdList
    datasources:
      - groupName: household
  introPersonalDetails:
    pageConfiguration: *introPersonalDetails
    nextPages:
      - pageName: livingSituation
  preparingMealsTogether:
    pageConfiguration: *preparingMealsTogether
    skipCondition: *noOneChoseSNAP?
    nextPages:
      - pageName: livingSituation
    datasources:
      - pageName: choosePrograms
      - groupName: household
        pageName: householdMemberInfo
  livingSituation:
    pageConfiguration: *livingSituation
    nextPages:
      - pageName: goingToSchool
    skipCondition:
      logicalOperator: AND
      conditions:
        - *applicantDidNotChooseGRH?
        - *noOneChoseCCAP?
    datasources:
      - pageName: choosePrograms
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
  goingToSchool:
    pageConfiguration: *goingToSchool
    datasources:
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: whoIsGoingToSchool
        condition: *doesNotLiveAlone?
      - pageName: pregnant
  whoIsGoingToSchool:
    pageConfiguration: *whoIsGoingToSchool
    datasources:
      - pageName: choosePrograms
      - pageName: goingToSchool
      - groupName: household
        pageName: householdMemberInfo
    skipCondition:
      logicalOperator: OR
      conditions:
        - conditions:
            - *applicantDidNotChooseCCAP?
            - *householdMemberDidNotChooseCCAP?
        - pageName: goingToSchool
          value: "false"
          input: goingToSchool
    nextPages:
      - pageName: pregnant
  pregnant:
    pageConfiguration: *pregnant
    nextPages:
      - pageName: whoIsPregnant
    datasources:
      - pageName: addHouseholdMembers
  whoIsPregnant:
    pageConfiguration: *whoIsPregnant
    nextPages:
      - pageName: migrantFarmWorker
    datasources:
      - pageName: addHouseholdMembers
      - pageName: pregnant
    skipCondition:
      logicalOperator: OR
      conditions:
        - *livesAlone?
        - pageName: pregnant
          input: isPregnant
          value: "false"
  usCitizen:
    pageConfiguration: *usCitizen
    nextPages:
      - pageName: whoIsNonCitizen
    datasources:
      - pageName: addHouseholdMembers
  whoIsNonCitizen:
    pageConfiguration: *whoIsNonCitizen
    nextPages:
      - pageName: disability
    datasources:
      - pageName: addHouseholdMembers
      - pageName: usCitizen
    skipCondition:
      logicalOperator: OR
      conditions:
        - *livesAlone?
        - pageName: usCitizen
          input: isUsCitizen
          value: "true"
  migrantFarmWorker:
    pageConfiguration: *migrantFarmWorker
    nextPages:
      - pageName: usCitizen
    datasources:
      - pageName: addHouseholdMembers
  disability:
    pageConfiguration: *disability
    datasources:
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: workSituation
  workSituation:
    pageConfiguration: *workSituation
    datasources:
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: tribalNationMember
        flag: apply-for-tribal-nation
      - pageName: introIncome
  tribalNationMember:
    pageConfiguration: *tribalNationMember
    nextPages:
      - pageName: nationsBoundary
        condition:
          pageName: tribalNationMember
          input: isTribalNationMember
          value: "true"
      - pageName: introIncome
    skipCondition: *livesAlone?
    datasources:
      - pageName: addHouseholdMembers
  nationsBoundary:
    pageConfiguration: *nationsBoundary
    nextPages:
      - pageName: selectTheTribe
        condition:
          pageName: nationsBoundary
          input: livingInNationBoundary
          value: "true"
      - pageName: introIncome
    skipCondition:
      logicalOperator: OR
      conditions:
        - *livesAlone?
        - pageName: tribalNationMember
          input: isTribalNationMember
          value: NO
    datasources:
      - pageName: addHouseholdMembers
  selectTheTribe:
    pageConfiguration: *selectTheTribe
    nextPages:
      - pageName: introIncome
  introIncome:
    pageConfiguration: *introIncome
    nextPages:
      - pageName: employmentStatus
  employmentStatus:
    pageConfiguration: *employmentStatus
    datasources:
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: jobSearch
        condition:
          pageName: employmentStatus
          input: areYouWorking
          value: "false"
      - pageName: incomeByJob
  incomeByJob:
    pageConfiguration: *incomeByJob
    subtleLinkTargetPage: thirtyDayIncome
    datasources:
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: householdSelectionForIncome
  householdSelectionForIncome:
    pageConfiguration: *householdSelectionForIncome
    groupName: jobs
    datasources:
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: employersName
    skipCondition: *livesAlone?
  employersName:
    pageConfiguration: *employersName
    groupName: jobs
    nextPages:
      - pageName: selfEmployment
    datasources:
      - pageName: householdSelectionForIncome
      - pageName: addHouseholdMembers
  selfEmployment:
    pageConfiguration: *selfEmployment
    groupName: jobs
    nextPages:
      - pageName: paidByTheHour
    datasources:
      - pageName: employersName
      - pageName: householdSelectionForIncome
      - pageName: addHouseholdMembers
  paidByTheHour:
    pageConfiguration: *paidByTheHour
    groupName: jobs
    nextPages:
      - pageName: hourlyWage
        condition:
          input: paidByTheHour
          value: "true"
      - pageName: payPeriod
        condition:
          input: paidByTheHour
          value: "false"
    datasources:
      - pageName: employersName
      - pageName: householdSelectionForIncome
      - pageName: addHouseholdMembers
    subtleLinkTargetPage: lastThirtyDaysJobIncome
  hourlyWage:
    pageConfiguration: *hourlyWage
    groupName: jobs
    nextPages:
      - pageName: hoursAWeek
    datasources:
      - pageName: employersName
      - pageName: householdSelectionForIncome
      - pageName: addHouseholdMembers
  hoursAWeek:
    pageConfiguration: *hoursAWeek
    groupName: jobs
    nextPages:
      - pageName: jobBuilder
    datasources:
      - pageName: employersName
      - pageName: householdSelectionForIncome
      - pageName: addHouseholdMembers
  payPeriod:
    pageConfiguration: *payPeriod
    groupName: jobs
    nextPages:
      - pageName: incomePerPayPeriod
    datasources:
      - pageName: employersName
      - pageName: householdSelectionForIncome
      - pageName: addHouseholdMembers
  incomePerPayPeriod:
    pageConfiguration: *incomePerPayPeriod
    groupName: jobs
    nextPages:
      - pageName: jobBuilder
    datasources:
      - pageName: employersName
      - pageName: payPeriod
  jobBuilder:
    pageConfiguration: *jobBuilder
    dataMissingRedirect: introIncome
    nextPages:
      - pageName: householdSelectionForIncome
      - pageName: jobSearch
    datasources:
      - groupName: jobs
      - pageName: addHouseholdMembers
  jobRedirectPage:
    pageConfiguration: *jobRedirectPage
    dataMissingRedirect: workSituation
    nextPages:
      - pageName: jobBuilder
    datasources:
      - groupName: jobs
  jobDeleteWarningPage:
    pageConfiguration: *jobDeleteWarningPage
    dataMissingRedirect: employmentStatus
    appliesToGroup: jobs
    nextPages:
      - pageName: jobBuilder
    datasources:
      - groupName: jobs
      - pageName: addHouseholdMembers
      - pageName: householdSelectionForIncome
  thirtyDayIncome:
    pageConfiguration: *thirtyDayIncome
    nextPages:
      - pageName: incomeUpNext
    datasources:
      - pageName: addHouseholdMembers
      - pageName: householdSelectionForIncome
  lastThirtyDaysJobIncome:
    pageConfiguration: *lastThirtyDaysJobIncome
    nextPages:
      - pageName: jobBuilder
    datasources:
      - pageName: addHouseholdMembers
      - pageName: householdSelectionForIncome
      - pageName: employersName
    groupName: jobs
  incomeUpNext:
    pageConfiguration: *incomeUpNext
    nextPages:
      - pageName: unearnedIncome
  unearnedIncome:
    pageConfiguration: *unearnedIncome
    nextPages:
      - pageName: unearnedIncomeSources
    datasources:
      - pageName: addHouseholdMembers
  unearnedIncomeSources:
    pageConfiguration: *unearnedIncomeSources
    nextPages:
      - pageName: unearnedIncomeCcap
    skipCondition:
      conditions:
        - pageName: unearnedIncome
          input: unearnedIncome
          value: NO_UNEARNED_INCOME_SELECTED
    datasources:
      - pageName: unearnedIncome
      - pageName: addHouseholdMembers
  unearnedIncomeCcap:
    pageConfiguration: *unearnedIncomeCcap
    skipCondition: *noOneChoseCCAP?
    nextPages:
      - pageName: unearnedIncomeSourcesCcap
    datasources:
      - pageName: choosePrograms
      - pageName: addHouseholdMembers
      - pageName: householdMemberInfo
        groupName: household
  unearnedIncomeSourcesCcap:
    pageConfiguration: *unearnedIncomeSourcesCcap
    nextPages:
      - pageName: futureIncome
    skipCondition:
      logicalOperator: OR
      conditions:
        - *noOneChoseCCAP?
        - pageName: unearnedIncomeCcap
          input: unearnedIncomeCcap
          value: NO_UNEARNED_INCOME_CCAP_SELECTED
    datasources:
      - pageName: unearnedIncomeCcap
      - pageName: addHouseholdMembers
      - pageName: choosePrograms
      - pageName: householdMemberInfo
        groupName: household
  futureIncome:
    pageConfiguration: *futureIncome
    nextPages:
      - pageName: startExpenses
    datasources:
      - pageName: addHouseholdMembers
  startExpenses:
    pageConfiguration: *startExpenses
    nextPages:
      - pageName: homeExpenses
  homeExpenses:
    pageConfiguration: *homeExpenses
    nextPages:
      - pageName: homeExpensesAmount
        condition:
          logicalOperator: OR
          conditions:
            - pageName: homeExpenses
              input: homeExpenses
              value: RENT
            - pageName: homeExpenses
              input: homeExpenses
              value: MORTGAGE
            - pageName: homeExpenses
              input: homeExpenses
              value: ROOM_AND_BOARD
      - pageName: utilities
    datasources:
      - pageName: addHouseholdMembers
  homeExpensesAmount:
    pageConfiguration: *homeExpensesAmount
    nextPages:
      - pageName: utilities
    datasources:
      - pageName: homeExpenses
      - pageName: addHouseholdMembers
      - pageName: choosePrograms
  utilities:
    pageConfiguration: *utilityPayments
    nextPages:
      - pageName: energyAssistance
    datasources:
      - pageName: addHouseholdMembers
  energyAssistance:
    pageConfiguration: *energyAssistance
    nextPages:
      - pageName: medicalExpenses
        condition:
          pageName: energyAssistance
          input: energyAssistance
          value: "false"
      - pageName: energyAssistanceMoreThan20
        condition:
          pageName: energyAssistance
          input: energyAssistance
          value: "true"
    datasources:
      - pageName: addHouseholdMembers
  energyAssistanceMoreThan20:
    pageConfiguration: *energyAssistanceMoreThan20
    skipCondition:
      pageName: energyAssistance
      input: energyAssistance
      value: "false"
    nextPages:
      - pageName: medicalExpenses
    datasources:
      - pageName: energyAssistance
      - pageName: addHouseholdMembers
  medicalExpenses:
    pageConfiguration: *medicalExpenses
    skipCondition:
      logicalOperator: AND
      conditions:
        - *noOneChoseCCAP?
        - *noOneChoseSNAP?
    nextPages:
      - pageName: medicalExpensesSources
    datasources:
      - pageName: choosePrograms
      - pageName: addHouseholdMembers
      - pageName: householdMemberInfo
        groupName: household
  medicalExpensesSources:
    pageConfiguration: *medicalExpensesSources
    nextPages:
      - pageName: supportAndCare
    skipCondition:
      logicalOperator: OR
      conditions:
        - conditions:
            - *noOneChoseCCAP?
            - *noOneChoseSNAP?
        - conditions:
            - pageName: medicalExpenses
              input: medicalExpenses
              value: MEDICAL_INSURANCE_PREMIUMS
              matcher: DOES_NOT_CONTAIN
            - pageName: medicalExpenses
              input: medicalExpenses
              value: DENTAL_INSURANCE_PREMIUMS
              matcher: DOES_NOT_CONTAIN
            - pageName: medicalExpenses
              input: medicalExpenses
              value: VISION_INSURANCE_PREMIUMS
              matcher: DOES_NOT_CONTAIN
    datasources:
      - pageName: medicalExpenses
      - pageName: addHouseholdMembers
      - pageName: householdMemberInfo
        groupName: household
      - pageName: choosePrograms
  supportAndCare:
    pageConfiguration: *supportAndCare
    nextPages:
      - pageName: vehicle
    datasources:
      - pageName: addHouseholdMembers
  savings:
    pageConfiguration: *savings
    nextPages:
      - pageName: savingsAmount
    datasources:
      - pageName: addHouseholdMembers
  savingsAmount:
    pageConfiguration: *liquidAssets
    skipCondition:
      pageName: savings
      input: haveSavings
      value: "false"
    datasources:
      - pageName: savings
      - pageName: addHouseholdMembers
    nextPages:
      - pageName: millionDollar
  investments:
    pageConfiguration: *investments
    nextPages:
      - pageName: savings
    datasources:
      - pageName: addHouseholdMembers
  vehicle:
    pageConfiguration: *vehicle
    nextPages:
      - pageName: realEstate
    datasources:
      - pageName: addHouseholdMembers
  realEstate:
    pageConfiguration: *realEstate
    skipCondition: *noOneChoseCCAP?
    nextPages:
      - pageName: investments
    datasources:
      - pageName: addHouseholdMembers
      - pageName: choosePrograms
      - pageName: householdMemberInfo
        groupName: household
  millionDollar:
    pageConfiguration: *millionDollar
    skipCondition:
      logicalOperator: OR
      conditions:
        - *noOneChoseCCAP?
        - conditions:
            - pageName: vehicle
              input: haveVehicle
              value: "false"
            - pageName: investments
              input: haveInvestments
              value: "false"
            - pageName: savings
              input: haveSavings
              value: "false"
            - pageName: realEstate
              input: ownRealEstate
              value: "false"
    nextPages:
      - pageName: soldAssets
    datasources:
      - pageName: vehicle
      - pageName: investments
      - pageName: savings
      - pageName: realEstate
      - pageName: addHouseholdMembers
      - pageName: choosePrograms
      - pageName: householdMemberInfo
        groupName: household
  soldAssets:
    pageConfiguration: *soldAssets
    nextPages:
      - pageName: submittingApplication
    datasources:
      - pageName: addHouseholdMembers
  submittingApplication:
    pageConfiguration: *submittingApplication
    nextPages:
      - pageName: registerToVote
  registerToVote:
    pageConfiguration: *registerToVote
    nextPages:
      - pageName: healthcareCoverage
  healthcareCoverage:
    pageConfiguration: *healthcareCoverage
    nextPages:
      - pageName: helper
  helper:
    pageConfiguration: *helper
    nextPages:
      - pageName: additionalInfo
        condition:
          pageName: helper
          input: helpWithBenefits
          value: "false"
      - pageName: authorizedRep
        condition:
          pageName: helper
          input: helpWithBenefits
          value: "true"
  authorizedRep:
    pageConfiguration: *authorizedRep
    nextPages:
      - pageName: speakToCounty
  speakToCounty:
    pageConfiguration: *speakToCounty
    nextPages:
      - pageName: spendOnYourBehalf
  spendOnYourBehalf:
    pageConfiguration: *spendOnYourBehalf
    nextPages:
      - pageName: helperContactInfo
  helperContactInfo:
    pageConfiguration: *helperContactInfo
    nextPages:
      - pageName: additionalInfo
    skipCondition:
      logicalOperator: AND
      conditions:
        - pageName: authorizedRep
          input: communicateOnYourBehalf
          value: "false"
        - pageName: speakToCounty
          input: getMailNotices
          value: "false"
        - pageName: spendOnYourBehalf
          input: spendOnYourBehalf
          value: "false"
  jobSearch:
    pageConfiguration: *jobSearch
    skipCondition: *noOneChoseCCAP?
    nextPages:
      - pageName: whoIsLookingForAJob
    datasources:
      - pageName: choosePrograms
      - pageName: addHouseholdMembers
      - pageName: householdMemberInfo
        groupName: household
  whoIsLookingForAJob:
    pageConfiguration: *whoIsLookingForAJob
    nextPages:
      - pageName: incomeUpNext
    datasources:
      - pageName: addHouseholdMembers
      - pageName: jobSearch
      - pageName: choosePrograms
      - pageName: householdMemberInfo
        groupName: household
    skipCondition:
      logicalOperator: OR
      conditions:
        - logicalOperator: AND
          conditions:
            - *applicantDidNotChooseCCAP?
            - *householdMemberDidNotChooseCCAP?
        - logicalOperator: OR
          conditions:
            - *livesAlone?
            - pageName: jobSearch
              input: currentlyLookingForJob
              value: "false"
  doYouNeedHelpImmediately:
    pageConfiguration: *doYouNeedHelpImmediately
    nextPages:
      - pageName: addHouseholdMembersExpedited
        flow: EXPEDITED
      - pageName: additionalInfo
        flow: MINIMUM
  addHouseholdMembersExpedited:
    pageConfiguration: *addHouseholdMembers
    nextPages:
      - pageName: expeditedIncome
  expeditedIncome:
    pageConfiguration: *thirtyDayIncome
    nextPages:
      - pageName: expeditedHasSavings
    datasources:
      - pageName: addHouseholdMembers
  expeditedHasSavings:
    pageConfiguration: *savings
    nextPages:
      - pageName: liquidAssets
    datasources:
      - pageName: addHouseholdMembers
  liquidAssets:
    pageConfiguration: *liquidAssets
    skipCondition:
      pageName: savings
      input: haveSavings
      value: "false"
    nextPages:
      - pageName: expeditedExpenses
    datasources:
      - pageName: addHouseholdMembers
      - pageName: savings
  expeditedExpenses:
    pageConfiguration: *expeditedExpenses
    nextPages:
      - pageName: expeditedExpensesAmount
    datasources:
      - pageName: addHouseholdMembers
      - pageName: choosePrograms
  expeditedExpensesAmount:
    pageConfiguration: *expeditedExpensesAmount
    skipCondition:
      pageName: expeditedExpenses
      input: payRentOrMortgage
      value: "false"
    nextPages:
      - pageName: expeditedUtilityPayments
    datasources:
      - pageName: addHouseholdMembers
      - pageName: choosePrograms
      - pageName: expeditedExpenses
  expeditedUtilityPayments:
    pageConfiguration: *utilityPayments
    nextPages:
      - pageName: expeditedMigrantFarmWorker
    datasources:
      - pageName: addHouseholdMembers
  expeditedMigrantFarmWorker:
    pageConfiguration: *migrantFarmWorker
    nextPages:
      - pageName: snapExpeditedDetermination
    datasources:
      - pageName: addHouseholdMembers
  snapExpeditedDetermination:
    pageConfiguration: *snapExpeditedDetermination
    nextPages:
      - pageName: legalStuff
  additionalInfo:
    pageConfiguration: *additionalInfo
    nextPages:
      - pageName: legalStuff
  legalStuff:
    pageConfiguration: *legalStuff
    nextPages:
      - pageName: signThisApplication
    datasources:
      - pageName: choosePrograms
      - groupName: household
        pageName: householdMemberInfo
  signThisApplication:
    pageConfiguration: *signThisApplication
    nextPages:
      - pageName: addingDocuments
  addingDocuments:
    pageConfiguration: *addingDocuments
    nextPages:
      - pageName: howToAddDocuments
    datasources:
      - pageName: choosePrograms
      - pageName: employmentStatus
      - pageName: homeExpenses
      - pageName: workSituation
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
        optional: "true"
      - pageName: medicalExpenses
    skipCondition: *skipDocumentUpload?
  howToAddDocuments:
    pageConfiguration: *howToAddDocuments
    nextPages:
      - pageName: documentRecommendation
    datasources:
      - pageName: choosePrograms
      - pageName: employmentStatus
      - pageName: homeExpenses
      - pageName: workSituation
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
        optional: "true"
      - pageName: medicalExpenses
    skipCondition: *skipDocumentUpload?
  documentRecommendation:
    pageConfiguration: *documentRecommendation
    nextPages:
      - pageName: uploadDocuments
      - pageName: documentOffboarding
    datasources:
      - pageName: choosePrograms
      - pageName: employmentStatus
      - pageName: homeExpenses
      - pageName: workSituation
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
        optional: "true"
      - pageName: medicalExpenses
    skipCondition: *skipDocumentUpload?
  uploadDocuments:
    pageConfiguration: *uploadDocuments
    nextPages:
      - pageName: documentSubmitConfirmation
    datasources:
      - pageName: choosePrograms
      - pageName: employmentStatus
      - pageName: homeExpenses
      - pageName: workSituation
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
        optional: "true"
      - pageName: medicalExpenses
    skipCondition: *skipDocumentUpload?
  uploadDocumentsDeleteWarningPage:
    pageConfiguration: *uploadDocumentsDeleteWarningPage
    nextPages:
      - pageName: uploadDocuments
  documentSubmitConfirmation:
    pageConfiguration: *documentSubmitConfirmation
    nextPages:
      - pageName: nextSteps
      - pageName: uploadDocuments
    datasources:
      - pageName: choosePrograms
      - pageName: employmentStatus
      - pageName: homeExpenses
      - pageName: workSituation
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
        optional: "true"
      - pageName: medicalExpenses
    skipCondition: *skipDocumentUpload?
  documentOffboarding:
    pageConfiguration: *documentOffboarding
    nextPages:
      - pageName: nextSteps
      - pageName: documentRecommendation
    datasources:
      - pageName: choosePrograms
      - pageName: employmentStatus
      - pageName: homeExpenses
      - pageName: workSituation
      - pageName: addHouseholdMembers
      - groupName: household
        pageName: householdMemberInfo
        optional: "true"
      - pageName: medicalExpenses
    skipCondition: *skipDocumentUpload?
  identifyCounty:
    pageConfiguration: *identifyCounty
    nextPages:
      - pageName: matchInfo
        flag: county-anoka
        condition:
          pageName: identifyCounty
          input: county
          value: Anoka
      - pageName: matchInfo
        flag: county-carver
        condition:
          pageName: identifyCounty
          input: county
          value: Carver
      - pageName: matchInfo
        flag: county-clay
        condition:
          pageName: identifyCounty
          input: county
          value: Clay
      - pageName: matchInfo
        flag: county-cook
        condition:
          pageName: identifyCounty
          input: county
          value: Cook
      - pageName: matchInfo
        flag: county-dodge
        condition:
          pageName: identifyCounty
          input: county
          value: Dodge
      - pageName: matchInfo
        flag: county-hennepin
        condition:
          pageName: identifyCounty
          input: county
          value: Hennepin
      - pageName: matchInfo
        flag: county-morrison
        condition:
          pageName: identifyCounty
          input: county
          value: Morrison
      - pageName: matchInfo
        flag: county-olmsted
        condition:
          pageName: identifyCounty
          input: county
          value: Olmsted
      - pageName: matchInfo
        flag: county-ottertail
        condition:
          pageName: identifyCounty
          input: county
          value: OtterTail
      - pageName: matchInfo
        flag: county-sherburne
        condition:
          pageName: identifyCounty
          input: county
          value: Sherburne
      - pageName: matchInfo
        flag: county-steele
        condition:
          pageName: identifyCounty
          input: county
          value: Steele
      - pageName: matchInfo
        flag: county-stlouis
        condition:
          pageName: identifyCounty
          input: county
          value: StLouis
      - pageName: matchInfo
        flag: county-wabasha
        condition:
          pageName: identifyCounty
          input: county
          value: Wabasha
      - pageName: matchInfo
        flag: county-waseca
        condition:
          pageName: identifyCounty
          input: county
          value: Waseca
      - pageName: matchInfo
        flag: county-wright
        condition:
          pageName: identifyCounty
          input: county
          value: Wright
      - pageName: emailDocsToYourCounty
    subtleLinkTargetPage: identifyZipcode
  identifyZipcode:
    pageConfiguration: *identifyZipcode
    enrichment: zipcodeToCountyEnrichment
    nextPages:
      - pageName: matchInfo
        flag: county-anoka
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Anoka
      - pageName: matchInfo
        flag: county-carver
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Carver
      - pageName: matchInfo
        flag: county-clay
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Clay
      - pageName: matchInfo
        flag: county-cook
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Cook
      - pageName: matchInfo
        flag: county-dodge
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Dodge
      - pageName: matchInfo
        flag: county-hennepin
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Hennepin
      - pageName: matchInfo
        flag: county-morrison
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Morrison
      - pageName: matchInfo
        flag: county-olmsted
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Olmsted
      - pageName: matchInfo
        flag: county-ottertail
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: OtterTail
      - pageName: matchInfo
        flag: county-sherburne
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Sherburne
      - pageName: matchInfo
        flag: county-steele
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Steele
      - pageName: matchInfo
        flag: county-stlouis
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: StLouis
      - pageName: matchInfo
        flag: county-wabasha
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Wabasha
      - pageName: matchInfo
        flag: county-waseca
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Waseca
      - pageName: matchInfo
        flag: county-wright
        condition:
          pageName: identifyZipcode
          input: mappedCounty
          value: Wright
      - pageName: emailDocsToYourCounty
    subtleLinkTargetPage: identifyCounty
  matchInfo:
    pageConfiguration: *matchInfo
    nextPages:
      - pageName: uploadDocuments
  emailDocsToYourCounty:
    pageConfiguration: *emailDocsToYourCounty
    nextPages:
      - pageName: matchInfo
    datasources:
      - pageName: identifyCounty
  nextSteps:
    pageConfiguration: *nextSteps
    nextPages:
      - pageName: success
    datasources:
      - pageName: contactInfo
  feedback:
    pageConfiguration: *feedback
  success:
    pageConfiguration: *success
    nextPages:
      - pageName: feedback
  documentsSent:
    pageConfiguration: *documentsSent
pageGroups:
  jobs:
    startPages:
      - householdSelectionForIncome
      - employersName
    completePages:
      - hoursAWeek
      - incomePerPayPeriod
      - lastThirtyDaysJobIncome
    reviewPage: jobBuilder
    redirectPage: jobRedirectPage
    deleteWarningPage: jobDeleteWarningPage
    restartPage: incomeByJob
    addedScope:
      selfEmployment:
        pageName: selfEmployment
        input: selfEmployment
        value: "true"
      nonSelfEmployment:
        pageName: selfEmployment
        input: selfEmployment
        value: "false"
  household:
    startPages:
      - householdMemberInfo
    completePages:
      - householdMemberInfo
    reviewPage: householdList
    deleteWarningPage: householdDeleteWarningPage
    restartPage: addHouseholdMembers
    startingCount: 1
landmarkPages:
  startTimerPage:
    - languagePreferences
    - identifyCounty
  landingPages:
    - landing
    - prepareToApply
    - addingDocsIsEasy
  postSubmitPages:
    - addingDocuments
    - howToAddDocuments
    - documentRecommendation
    - uploadDocuments
    - uploadDocumentsDeleteWarningPage
    - documentOffboarding
    - documentSubmitConfirmation
    - nextSteps
    - success
    - feedback
    - matchInfo
    - documentsSent
    - identifyCounty
  nextStepsPage: nextSteps
  terminalPage: success
  laterDocsTerminalPage: documentsSent
  submitPage: signThisApplication
  laterDocsIdPage: matchInfo # Page where confirmation number is generated for later docs (happens before submit)
  uploadDocumentsPage: uploadDocuments